@model Mobikon.IMS.Message.DeviceTransaction

@{
    ViewBag.Title = "Edit device transaction";
}
<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Edit device inventory</title>
</head>
<body>
    @using (Html.BeginForm("EditDeviceTransaction", "Outlet", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        <br />
        <br />
        <div class="col-md-12" style="border-radius: 5px;text-align: center;background-color: #fff;border: solid 1px #808080;">
            <center>
                @Html.ValidationSummary(true, "Device inventory not updated successfully.", new { @class = "text-danger" })
              
                <h3>Edit device inventory</h3>
               
                    <div class="form-horizontal">
                        <div class="col-md-6">
                            @Html.HiddenFor(deviceTransaction => deviceTransaction.serialNo)
                            @Html.HiddenFor(deviceTransaction => deviceTransaction.deviceID)
                            <div class="form-group">
                                @Html.Label(" ", new { @class = "control-label col-md-4" })
                                <div class="col-md-5">
                                    @Html.Label("", (string)ViewBag.message, new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(deviceTransaction => deviceTransaction.productSerial, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-5">
                                    @Html.TextBoxFor(deviceTransaction => deviceTransaction.productSerial, new { @class = "form-control", @readonly = "readonly" })@*@disabled = "disabled"*@
                                    @Html.ValidationMessageFor(deviceTransaction => deviceTransaction.productSerial, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(deviceTransaction => deviceTransaction.deviceDetails, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-5">
                                    @Html.TextBoxFor(deviceTransaction => deviceTransaction.deviceDetails, new { @class = "form-control", @readonly = "readonly" })@*@disabled = "disabled"*@
                                    @Html.ValidationMessageFor(deviceTransaction => deviceTransaction.deviceDetails, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            @Html.HiddenFor(deviceTransaction => deviceTransaction.clientID)
                            @if (Session["Role"].ToString() == "Accounts" || Session["Role"].ToString() == "Administrators")
                            {
                                <div class="form-group">
                                    @Html.LabelFor(deviceTransaction => deviceTransaction.clientName, new { @class = "control-label col-md-4" })
                                    <div class="col-md-5">
                                        @Html.DropDownListFor(deviceTransaction => deviceTransaction.clientName, ViewBag.clientName as IEnumerable<SelectListItem>, "Select client/account name", new { @class = "form-control", @autofocus = "autofocus" })
                                        @Html.ValidationMessageFor(deviceTransaction => deviceTransaction.clientName, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            }
                            @if (Session["Role"].ToString() == "Operations")
                            {
                                <div class="form-group">
                                    @Html.LabelFor(deviceTransaction => deviceTransaction.clientName, new { @class = "control-label col-md-4" })
                                    <div class="col-md-5">
                                        @Html.DropDownListFor(deviceTransaction => deviceTransaction.clientName, ViewBag.clientName as IEnumerable<SelectListItem>, "Select client/account name", new { @class = "form-control", @autofocus = "autofocus", @readonly = "readonly" })
                                        @Html.ValidationMessageFor(deviceTransaction => deviceTransaction.clientName, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            }
                            @Html.HiddenFor(deviceTransaction => deviceTransaction.outletID)
                            @if (Session["Role"].ToString() == "Accounts" || Session["Role"].ToString() == "Administrators")
                            {
                                <div class="form-group">
                                    @Html.LabelFor(deviceTransaction => deviceTransaction.outletName, new { @class = "control-label col-md-4" })
                                    <div class="col-md-5">
                                        @Html.DropDownListFor(deviceTransaction => deviceTransaction.outletName, ViewBag.OutletName as IEnumerable<SelectListItem>, "Select outlet", new { @class = "form-control" })
                                        @Html.ValidationMessageFor(deviceTransaction => deviceTransaction.outletName, "", new { @class = "text-danger" })

                                    </div>
                                </div>
                            }
                            @if (Session["Role"].ToString() == "Operations")
                            {
                                <div class="form-group">
                                    @Html.LabelFor(deviceTransaction => deviceTransaction.outletName, new { @class = "control-label col-md-4" })
                                    <div class="col-md-5">
                                        @Html.DropDownListFor(deviceTransaction => deviceTransaction.outletName, ViewBag.OutletName as IEnumerable<SelectListItem>, "Select outlet", new { @class = "form-control", @readonly = "readonly" })
                                        @Html.ValidationMessageFor(deviceTransaction => deviceTransaction.outletName, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            }
                            @Html.HiddenFor(deviceTransaction => deviceTransaction.cityID)
                            <div class="form-group">
                                @Html.LabelFor(deviceTransaction => deviceTransaction.cityName, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-5">
                                    @Html.TextBoxFor(deviceTransaction => deviceTransaction.cityName, new { @class = "form-control", @readonly = "readonly" })
                                    @Html.ValidationMessageFor(deviceTransaction => deviceTransaction.cityName, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            @Html.HiddenFor(deviceTransaction => deviceTransaction.countryID)
                            <div class="form-group">
                                @Html.LabelFor(deviceTransaction => deviceTransaction.countryName, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-5">
                                    @Html.TextBoxFor(deviceTransaction => deviceTransaction.countryName, new { @class = "form-control", @readonly = "readonly" })
                                    @Html.ValidationMessageFor(deviceTransaction => deviceTransaction.countryName, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            @if (Session["Role"].ToString() == "Operations" || Session["Role"].ToString() == "Administrators")
                            {
                                <div class="form-group">
                                    @Html.LabelFor(deviceTransaction => deviceTransaction.dc, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-5">
                                        @Html.TextBoxFor(deviceTransaction => deviceTransaction.dc, new { @class = "form-control", @maxlength = "20" })
                                        @Html.ValidationMessageFor(deviceTransaction => deviceTransaction.dc, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(deviceTransaction => deviceTransaction.dcDate, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-5">
                                        @Html.TextBoxFor(deviceTransaction => deviceTransaction.dcDate, new { @class = "form-control datepicker", placeholder = "Enter dc date here..." })
                                        @Html.ValidationMessageFor(deviceTransaction => deviceTransaction.dcDate, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.Label("Attachment", new { @class = "control-label col-md-4" })
                                    <div class="col-md-5">
                                        <input type="file" name="fileUpload" class="form-control" />
                                    </div>
                                </div>
                            }
                            @if (Session["Role"].ToString() == "Accounts")
                            {
                                <div class="form-group">
                                    @Html.LabelFor(deviceTransaction => deviceTransaction.dc, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-5">
                                        @Html.TextBoxFor(deviceTransaction => deviceTransaction.dc, new { @class = "form-control", @maxlength = "20", @disabled = "disabled" })
                                        @Html.ValidationMessageFor(deviceTransaction => deviceTransaction.dc, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(deviceTransaction => deviceTransaction.dcDate, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-5">
                                        @Html.TextBoxFor(deviceTransaction => deviceTransaction.dcDate, new { @class = "form-control datepicker", @disabled = "disabled", placeholder = "Enter dc date here..." })
                                        @Html.ValidationMessageFor(deviceTransaction => deviceTransaction.dcDate, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            }
                            <div class="form-group">
                                @Html.DisplayFor(deviceTransaction => deviceTransaction.dcFile, new { @class = "control-label col-md-4" })
                                <div class="col-md-5">
                                    @Html.ActionLink("Show Delivery Challan", "DisplayPDF", new { filePath = Model.dcFile }, new { target = "_blank" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(deviceTransaction => deviceTransaction.deliveryDate, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-5">
                                    @Html.TextBoxFor(deviceTransaction => deviceTransaction.deliveryDate, new { @class = "form-control datepicker", @disabled = "disabled", placeholder = "Enter deployment date here..." })
                                    @Html.ValidationMessageFor(deviceTransaction => deviceTransaction.deliveryDate, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            @if (Session["Role"].ToString() == "Accounts" || Session["Role"].ToString() == "Administrators")
                            {
                                <div class="form-group">
                                    @Html.LabelFor(deviceTransaction => deviceTransaction.rdc, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-5">
                                        @Html.TextBoxFor(deviceTransaction => deviceTransaction.rdc, new { @class = "form-control", @maxlength = "20" })
                                        @Html.ValidationMessageFor(deviceTransaction => deviceTransaction.rdc, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(deviceTransaction => deviceTransaction.rdcDate, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-5">
                                        @Html.TextBoxFor(deviceTransaction => deviceTransaction.rdcDate, new { @class = "form-control datepicker", placeholder = "Enter rdc date here..." })
                                        @Html.ValidationMessageFor(deviceTransaction => deviceTransaction.rdcDate, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(deviceTransaction => deviceTransaction.hic, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-5">
                                        @Html.TextBoxFor(deviceTransaction => deviceTransaction.hic, new { @class = "form-control", @maxlength = "20" })
                                        @Html.ValidationMessageFor(deviceTransaction => deviceTransaction.hic, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(deviceTransaction => deviceTransaction.hicDate, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-5">
                                        @Html.TextBoxFor(deviceTransaction => deviceTransaction.hicDate, new { @class = "form-control datepicker", @maxLength = "10", placeholder = "Enter hic date here..." })
                                        @Html.ValidationMessageFor(deviceTransaction => deviceTransaction.hicDate, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(deviceTransaction => deviceTransaction.insured, new { @class = "control-label col-md-4" })
                                    <div class="col-md-5">
                                        @Html.CheckBoxFor(deviceTransaction => deviceTransaction.insured, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(deviceTransaction => deviceTransaction.insured, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(deviceTransaction => deviceTransaction.insuranceClaim, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-5">
                                        @Html.TextBoxFor(deviceTransaction => deviceTransaction.insuranceClaim, new { @class = "form-control", @maxlength = "25" })
                                        @Html.ValidationMessageFor(deviceTransaction => deviceTransaction.insuranceClaim, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(deviceTransaction => deviceTransaction.damagedOldDevice, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-5">
                                        @Html.TextBoxFor(deviceTransaction => deviceTransaction.damagedOldDevice, new { @class = "form-control", @maxlength = "25" })
                                        @Html.ValidationMessageFor(deviceTransaction => deviceTransaction.damagedOldDevice, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(deviceTransaction => deviceTransaction.transferOwnershipDate, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-5">
                                        @Html.TextBoxFor(deviceTransaction => deviceTransaction.transferOwnershipDate, new { @class = "form-control datepicker", placeholder = "Enter transfer ownership date here..." })
                                        @Html.ValidationMessageFor(deviceTransaction => deviceTransaction.transferOwnershipDate, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            }
                            @if (Session["Role"].ToString() == "Operations")
                            {
                                <div class="form-group">
                                    @Html.LabelFor(deviceTransaction => deviceTransaction.rdc, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-5">
                                        @Html.TextBoxFor(deviceTransaction => deviceTransaction.rdc, new { @class = "form-control", @readonly = "readonly", @maxlength = "20" })
                                        @Html.ValidationMessageFor(deviceTransaction => deviceTransaction.rdc, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(deviceTransaction => deviceTransaction.rdcDate, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-5">
                                        @Html.TextBoxFor(deviceTransaction => deviceTransaction.rdcDate, new { @class = "form-control datepicker", @readonly = "readonly", placeholder = "Enter rdc date here..." })
                                        @Html.ValidationMessageFor(deviceTransaction => deviceTransaction.rdcDate, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(deviceTransaction => deviceTransaction.hic, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-5">
                                        @Html.TextBoxFor(deviceTransaction => deviceTransaction.hic, new { @class = "form-control", @readonly = "readonly", @maxlength = "20" })
                                        @Html.ValidationMessageFor(deviceTransaction => deviceTransaction.hic, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(deviceTransaction => deviceTransaction.hicDate, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-5">
                                        @Html.TextBoxFor(deviceTransaction => deviceTransaction.hicDate, new { @class = "form-control datepicker", @readonly = "readonly", @maxLength = "10", placeholder = "Enter hic date here..." })
                                        @Html.ValidationMessageFor(deviceTransaction => deviceTransaction.hicDate, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(deviceTransaction => deviceTransaction.insured, new { @class = "control-label col-md-4" })
                                    <div class="col-md-5">
                                        @Html.CheckBoxFor(deviceTransaction => deviceTransaction.insured, new { @class = "form-control", @readonly = "readonly" })
                                        @Html.ValidationMessageFor(deviceTransaction => deviceTransaction.insured, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(deviceTransaction => deviceTransaction.insuranceClaim, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-5">
                                        @Html.TextBoxFor(deviceTransaction => deviceTransaction.insuranceClaim, new { @class = "form-control", @readonly = "readonly", @maxlength = "25" })
                                        @Html.ValidationMessageFor(deviceTransaction => deviceTransaction.insuranceClaim, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(deviceTransaction => deviceTransaction.damagedOldDevice, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-5">
                                        @Html.TextBoxFor(deviceTransaction => deviceTransaction.damagedOldDevice, new { @class = "form-control", @readonly = "readonly", @maxlength = "25" })
                                        @Html.ValidationMessageFor(deviceTransaction => deviceTransaction.damagedOldDevice, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(deviceTransaction => deviceTransaction.transferOwnershipDate, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-5">
                                        @Html.TextBoxFor(deviceTransaction => deviceTransaction.transferOwnershipDate, new { @class = "form-control datepicker", @readonly = "readonly", placeholder = "Enter transfer ownership date here..." })
                                        @Html.ValidationMessageFor(deviceTransaction => deviceTransaction.transferOwnershipDate, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            }
                            <div class="form-group">
                                @Html.LabelFor(deviceTransaction => deviceTransaction.companyOwner, new { @class = "control-label col-md-4" })
                                <div class="col-md-5">
                                    @Html.DropDownListFor(device => device.companyOwner, ViewBag.companyOwner as IEnumerable<SelectListItem>, new { @class = "form-control", @disabled = "disabled" })
                                    @Html.ValidationMessageFor(deviceTransaction => deviceTransaction.companyOwner, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            @Html.HiddenFor(deviceTransaction => deviceTransaction.statusID)
                            @if (Session["Role"].ToString() == "Accounts" || Session["Role"].ToString() == "Administrators")
                            {
                                <div class="form-group">
                                    @Html.LabelFor(deviceTransaction => deviceTransaction.status, new { @class = "control-label col-md-4" })
                                    <div class="col-md-5">
                                        @Html.DropDownListFor(deviceTransaction => deviceTransaction.status, ViewBag.statusName as IEnumerable<SelectListItem>, "Select status", new { @class = "form-control" })
                                        @Html.ValidationMessageFor(deviceTransaction => deviceTransaction.status, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(deviceTransaction => deviceTransaction.remarks, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-5">
                                        @Html.TextAreaFor(deviceTransaction => deviceTransaction.remarks, new { @class = "form-control", @maxlength = "5000" })
                                        @Html.ValidationMessageFor(deviceTransaction => deviceTransaction.remarks, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            }
                            @if (Session["Role"].ToString() == "Operations")
                            {
                                <div class="form-group">
                                    @Html.LabelFor(deviceTransaction => deviceTransaction.status, new { @class = "control-label col-md-4" })
                                    <div class="col-md-5">
                                        @Html.DropDownListFor(deviceTransaction => deviceTransaction.status, ViewBag.statusName as IEnumerable<SelectListItem>, "Select status", new { @class = "form-control", @readonly = "readonly" })
                                        @Html.ValidationMessageFor(deviceTransaction => deviceTransaction.status, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(deviceTransaction => deviceTransaction.remarks, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-5">
                                        @Html.TextAreaFor(deviceTransaction => deviceTransaction.remarks, new { @class = "form-control", @readonly = "readonly", @maxlength = "5000" })
                                        @Html.ValidationMessageFor(deviceTransaction => deviceTransaction.remarks, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            }
                        </div>
                      
                            <div class="form-group">
                                <div class="col-md-10">
                                    <input type="submit" name="command" value="Save" class="btn btn-default" />
                                    @*<input type="submit" name="command" value="Cancel" class="btn btn-default" />
                    <input type="submit" name="command" value="Close" class="btn btn-default" />*@
                                </div>
                            </div>
                       
                </div>
            </center>
            <div class="col-md-3">
                @Html.ActionLink("Back to List", "Outlet", "Outlet")<div>&nbsp;</div>
            </div>
                </div>
                
        
    }
               
                @section Scripts
        {
                    @Scripts.Render("~/bundles/jqueryval")
                }
    </body>
</html>
