#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mobikon.IMS.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Mobikon")]
	public partial class MobikonIMSDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCITY(CITY instance);
    partial void UpdateCITY(CITY instance);
    partial void DeleteCITY(CITY instance);
    partial void InsertCLIENT(CLIENT instance);
    partial void UpdateCLIENT(CLIENT instance);
    partial void DeleteCLIENT(CLIENT instance);
    partial void InsertCOUNTRY(COUNTRY instance);
    partial void UpdateCOUNTRY(COUNTRY instance);
    partial void DeleteCOUNTRY(COUNTRY instance);
    partial void InsertDEVICE(DEVICE instance);
    partial void UpdateDEVICE(DEVICE instance);
    partial void DeleteDEVICE(DEVICE instance);
    partial void InsertDEVICETRANSACTION(DEVICETRANSACTION instance);
    partial void UpdateDEVICETRANSACTION(DEVICETRANSACTION instance);
    partial void DeleteDEVICETRANSACTION(DEVICETRANSACTION instance);
    partial void InsertDEVICETYPE(DEVICETYPE instance);
    partial void UpdateDEVICETYPE(DEVICETYPE instance);
    partial void DeleteDEVICETYPE(DEVICETYPE instance);
    partial void InsertOUTLET(OUTLET instance);
    partial void UpdateOUTLET(OUTLET instance);
    partial void DeleteOUTLET(OUTLET instance);
    partial void InsertROLE(ROLE instance);
    partial void UpdateROLE(ROLE instance);
    partial void DeleteROLE(ROLE instance);
    partial void InsertSETTING(SETTING instance);
    partial void UpdateSETTING(SETTING instance);
    partial void DeleteSETTING(SETTING instance);
    partial void InsertSTATUS(STATUS instance);
    partial void UpdateSTATUS(STATUS instance);
    partial void DeleteSTATUS(STATUS instance);
    partial void InsertUSER(USER instance);
    partial void UpdateUSER(USER instance);
    partial void DeleteUSER(USER instance);
    #endregion
		
		public MobikonIMSDataContext() : 
				base(global::Mobikon.IMS.Data.Properties.Settings.Default.MobikonConnectionString2, mappingSource)
		{
			OnCreated();
		}
		
		public MobikonIMSDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MobikonIMSDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MobikonIMSDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MobikonIMSDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CITY> CITies
		{
			get
			{
				return this.GetTable<CITY>();
			}
		}
		
		public System.Data.Linq.Table<CLIENT> CLIENTs
		{
			get
			{
				return this.GetTable<CLIENT>();
			}
		}
		
		public System.Data.Linq.Table<COUNTRY> COUNTRies
		{
			get
			{
				return this.GetTable<COUNTRY>();
			}
		}
		
		public System.Data.Linq.Table<DEVICE> DEVICEs
		{
			get
			{
				return this.GetTable<DEVICE>();
			}
		}
		
		public System.Data.Linq.Table<DEVICETRANSACTION> DEVICETRANSACTIONs
		{
			get
			{
				return this.GetTable<DEVICETRANSACTION>();
			}
		}
		
		public System.Data.Linq.Table<DEVICETYPE> DEVICETYPEs
		{
			get
			{
				return this.GetTable<DEVICETYPE>();
			}
		}
		
		public System.Data.Linq.Table<OUTLET> OUTLETs
		{
			get
			{
				return this.GetTable<OUTLET>();
			}
		}
		
		public System.Data.Linq.Table<ROLE> ROLEs
		{
			get
			{
				return this.GetTable<ROLE>();
			}
		}
		
		public System.Data.Linq.Table<SETTING> SETTINGs
		{
			get
			{
				return this.GetTable<SETTING>();
			}
		}
		
		public System.Data.Linq.Table<STATUS> STATUS
		{
			get
			{
				return this.GetTable<STATUS>();
			}
		}
		
		public System.Data.Linq.Table<USER> USERs
		{
			get
			{
				return this.GetTable<USER>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GETCLIENT")]
		public ISingleResult<GETCLIENTResult> GETCLIENT([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> clientID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(500)")] string clientName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> statusClient)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), clientID, clientName, statusClient);
			return ((ISingleResult<GETCLIENTResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GETDEVICEINVENTORYCOUNT")]
		public ISingleResult<GETDEVICEINVENTORYCOUNTResult> GETDEVICEINVENTORYCOUNT([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> fromDate, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> toDate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fromDate, toDate);
			return ((ISingleResult<GETDEVICEINVENTORYCOUNTResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GETOUTLET")]
		public ISingleResult<GETOUTLETResult> GETOUTLET([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> outletID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(500)")] string outletName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> clientID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(500)")] string clientName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> statusOutlet)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), outletID, outletName, clientID, clientName, statusOutlet);
			return ((ISingleResult<GETOUTLETResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.REMOVEBLOCKSTATUS")]
		public ISingleResult<REMOVEBLOCKSTATUSResult> REMOVEBLOCKSTATUS()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<REMOVEBLOCKSTATUSResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GETDEVICETRANSACTION")]
		public ISingleResult<GETDEVICETRANSACTIONResult> GETDEVICETRANSACTION([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> deviceID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(250)")] string productSerial, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(250)")] string deviceDetails, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> serialNo, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> clientID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(500)")] string clientName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> outletID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(500)")] string outletName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> fromDate, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> toDate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), deviceID, productSerial, deviceDetails, serialNo, clientID, clientName, outletID, outletName, fromDate, toDate);
			return ((ISingleResult<GETDEVICETRANSACTIONResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GETDEVICETRANSACTIONHISTORY")]
		public ISingleResult<GETDEVICETRANSACTIONHISTORYResult> GETDEVICETRANSACTIONHISTORY([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> deviceID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(250)")] string productSerial, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(250)")] string deviceDetails, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> serialNo, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> clientID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(500)")] string clientName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> outletID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(500)")] string outletName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> fromDate, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> toDate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), deviceID, productSerial, deviceDetails, serialNo, clientID, clientName, outletID, outletName, fromDate, toDate);
			return ((ISingleResult<GETDEVICETRANSACTIONHISTORYResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GETDEVICE")]
		public ISingleResult<GETDEVICEResult> GETDEVICE([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> deviceID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(25)")] string productSerial, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(250)")] string deviceDetails, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string statusDevice)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), deviceID, productSerial, deviceDetails, statusDevice);
			return ((ISingleResult<GETDEVICEResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GETSTATUSDEVICELIST")]
		public ISingleResult<GETSTATUSDEVICELISTResult> GETSTATUSDEVICELIST([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(250)")] string statusName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), statusName);
			return ((ISingleResult<GETSTATUSDEVICELISTResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DELETEDEVICE")]
		public ISingleResult<DELETEDEVICEResult> DELETEDEVICE([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> deviceID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(15)")] string productSerial)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), deviceID, productSerial);
			return ((ISingleResult<DELETEDEVICEResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CITY")]
	public partial class CITY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CITYID;
		
		private string _CITYNAME;
		
		private int _COUNTRYID;
		
		private EntitySet<OUTLET> _OUTLETs;
		
		private EntityRef<COUNTRY> _COUNTRY;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCITYIDChanging(int value);
    partial void OnCITYIDChanged();
    partial void OnCITYNAMEChanging(string value);
    partial void OnCITYNAMEChanged();
    partial void OnCOUNTRYIDChanging(int value);
    partial void OnCOUNTRYIDChanged();
    #endregion
		
		public CITY()
		{
			this._OUTLETs = new EntitySet<OUTLET>(new Action<OUTLET>(this.attach_OUTLETs), new Action<OUTLET>(this.detach_OUTLETs));
			this._COUNTRY = default(EntityRef<COUNTRY>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CITYID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CITYID
		{
			get
			{
				return this._CITYID;
			}
			set
			{
				if ((this._CITYID != value))
				{
					this.OnCITYIDChanging(value);
					this.SendPropertyChanging();
					this._CITYID = value;
					this.SendPropertyChanged("CITYID");
					this.OnCITYIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CITYNAME", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string CITYNAME
		{
			get
			{
				return this._CITYNAME;
			}
			set
			{
				if ((this._CITYNAME != value))
				{
					this.OnCITYNAMEChanging(value);
					this.SendPropertyChanging();
					this._CITYNAME = value;
					this.SendPropertyChanged("CITYNAME");
					this.OnCITYNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COUNTRYID", DbType="Int NOT NULL")]
		public int COUNTRYID
		{
			get
			{
				return this._COUNTRYID;
			}
			set
			{
				if ((this._COUNTRYID != value))
				{
					if (this._COUNTRY.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCOUNTRYIDChanging(value);
					this.SendPropertyChanging();
					this._COUNTRYID = value;
					this.SendPropertyChanged("COUNTRYID");
					this.OnCOUNTRYIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CITY_OUTLET", Storage="_OUTLETs", ThisKey="CITYID", OtherKey="CITYID")]
		public EntitySet<OUTLET> OUTLETs
		{
			get
			{
				return this._OUTLETs;
			}
			set
			{
				this._OUTLETs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="COUNTRY_CITY", Storage="_COUNTRY", ThisKey="COUNTRYID", OtherKey="COUNTRYID", IsForeignKey=true)]
		public COUNTRY COUNTRY
		{
			get
			{
				return this._COUNTRY.Entity;
			}
			set
			{
				COUNTRY previousValue = this._COUNTRY.Entity;
				if (((previousValue != value) 
							|| (this._COUNTRY.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._COUNTRY.Entity = null;
						previousValue.CITies.Remove(this);
					}
					this._COUNTRY.Entity = value;
					if ((value != null))
					{
						value.CITies.Add(this);
						this._COUNTRYID = value.COUNTRYID;
					}
					else
					{
						this._COUNTRYID = default(int);
					}
					this.SendPropertyChanged("COUNTRY");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OUTLETs(OUTLET entity)
		{
			this.SendPropertyChanging();
			entity.CITY = this;
		}
		
		private void detach_OUTLETs(OUTLET entity)
		{
			this.SendPropertyChanging();
			entity.CITY = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CLIENT")]
	public partial class CLIENT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _CLIENTID;
		
		private string _CLIENTNAME;
		
		private string _ADDRESS;
		
		private int _CITYID;
		
		private bool _ACTIVATED;
		
		private long _USERID;
		
		private System.DateTime _CREATEDDATE;
		
		private EntitySet<OUTLET> _OUTLETs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCLIENTIDChanging(long value);
    partial void OnCLIENTIDChanged();
    partial void OnCLIENTNAMEChanging(string value);
    partial void OnCLIENTNAMEChanged();
    partial void OnADDRESSChanging(string value);
    partial void OnADDRESSChanged();
    partial void OnCITYIDChanging(int value);
    partial void OnCITYIDChanged();
    partial void OnACTIVATEDChanging(bool value);
    partial void OnACTIVATEDChanged();
    partial void OnUSERIDChanging(long value);
    partial void OnUSERIDChanged();
    partial void OnCREATEDDATEChanging(System.DateTime value);
    partial void OnCREATEDDATEChanged();
    #endregion
		
		public CLIENT()
		{
			this._OUTLETs = new EntitySet<OUTLET>(new Action<OUTLET>(this.attach_OUTLETs), new Action<OUTLET>(this.detach_OUTLETs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CLIENTID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long CLIENTID
		{
			get
			{
				return this._CLIENTID;
			}
			set
			{
				if ((this._CLIENTID != value))
				{
					this.OnCLIENTIDChanging(value);
					this.SendPropertyChanging();
					this._CLIENTID = value;
					this.SendPropertyChanged("CLIENTID");
					this.OnCLIENTIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CLIENTNAME", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string CLIENTNAME
		{
			get
			{
				return this._CLIENTNAME;
			}
			set
			{
				if ((this._CLIENTNAME != value))
				{
					this.OnCLIENTNAMEChanging(value);
					this.SendPropertyChanging();
					this._CLIENTNAME = value;
					this.SendPropertyChanged("CLIENTNAME");
					this.OnCLIENTNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADDRESS", DbType="NVarChar(MAX)")]
		public string ADDRESS
		{
			get
			{
				return this._ADDRESS;
			}
			set
			{
				if ((this._ADDRESS != value))
				{
					this.OnADDRESSChanging(value);
					this.SendPropertyChanging();
					this._ADDRESS = value;
					this.SendPropertyChanged("ADDRESS");
					this.OnADDRESSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CITYID", DbType="Int NOT NULL")]
		public int CITYID
		{
			get
			{
				return this._CITYID;
			}
			set
			{
				if ((this._CITYID != value))
				{
					this.OnCITYIDChanging(value);
					this.SendPropertyChanging();
					this._CITYID = value;
					this.SendPropertyChanged("CITYID");
					this.OnCITYIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACTIVATED", DbType="Bit NOT NULL")]
		public bool ACTIVATED
		{
			get
			{
				return this._ACTIVATED;
			}
			set
			{
				if ((this._ACTIVATED != value))
				{
					this.OnACTIVATEDChanging(value);
					this.SendPropertyChanging();
					this._ACTIVATED = value;
					this.SendPropertyChanged("ACTIVATED");
					this.OnACTIVATEDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USERID", DbType="BigInt NOT NULL")]
		public long USERID
		{
			get
			{
				return this._USERID;
			}
			set
			{
				if ((this._USERID != value))
				{
					this.OnUSERIDChanging(value);
					this.SendPropertyChanging();
					this._USERID = value;
					this.SendPropertyChanged("USERID");
					this.OnUSERIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATEDDATE", DbType="DateTime NOT NULL")]
		public System.DateTime CREATEDDATE
		{
			get
			{
				return this._CREATEDDATE;
			}
			set
			{
				if ((this._CREATEDDATE != value))
				{
					this.OnCREATEDDATEChanging(value);
					this.SendPropertyChanging();
					this._CREATEDDATE = value;
					this.SendPropertyChanged("CREATEDDATE");
					this.OnCREATEDDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CLIENT_OUTLET", Storage="_OUTLETs", ThisKey="CLIENTID", OtherKey="CLIENTID")]
		public EntitySet<OUTLET> OUTLETs
		{
			get
			{
				return this._OUTLETs;
			}
			set
			{
				this._OUTLETs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OUTLETs(OUTLET entity)
		{
			this.SendPropertyChanging();
			entity.CLIENT = this;
		}
		
		private void detach_OUTLETs(OUTLET entity)
		{
			this.SendPropertyChanging();
			entity.CLIENT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.COUNTRY")]
	public partial class COUNTRY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _COUNTRYID;
		
		private string _COUNTRYNAME;
		
		private EntitySet<CITY> _CITies;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCOUNTRYIDChanging(int value);
    partial void OnCOUNTRYIDChanged();
    partial void OnCOUNTRYNAMEChanging(string value);
    partial void OnCOUNTRYNAMEChanged();
    #endregion
		
		public COUNTRY()
		{
			this._CITies = new EntitySet<CITY>(new Action<CITY>(this.attach_CITies), new Action<CITY>(this.detach_CITies));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COUNTRYID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int COUNTRYID
		{
			get
			{
				return this._COUNTRYID;
			}
			set
			{
				if ((this._COUNTRYID != value))
				{
					this.OnCOUNTRYIDChanging(value);
					this.SendPropertyChanging();
					this._COUNTRYID = value;
					this.SendPropertyChanged("COUNTRYID");
					this.OnCOUNTRYIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COUNTRYNAME", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string COUNTRYNAME
		{
			get
			{
				return this._COUNTRYNAME;
			}
			set
			{
				if ((this._COUNTRYNAME != value))
				{
					this.OnCOUNTRYNAMEChanging(value);
					this.SendPropertyChanging();
					this._COUNTRYNAME = value;
					this.SendPropertyChanged("COUNTRYNAME");
					this.OnCOUNTRYNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="COUNTRY_CITY", Storage="_CITies", ThisKey="COUNTRYID", OtherKey="COUNTRYID")]
		public EntitySet<CITY> CITies
		{
			get
			{
				return this._CITies;
			}
			set
			{
				this._CITies.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CITies(CITY entity)
		{
			this.SendPropertyChanging();
			entity.COUNTRY = this;
		}
		
		private void detach_CITies(CITY entity)
		{
			this.SendPropertyChanging();
			entity.COUNTRY = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DEVICE")]
	public partial class DEVICE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _DEVICEID;
		
		private string _DEVICETYPE;
		
		private string _PRODUCTSERIAL;
		
		private string _DEVICEDETAILS;
		
		private string _DEVICETAG;
		
		private int _STATUSID;
		
		private string _COMPANYOWNER;
		
		private string _NOTE;
		
		private System.Nullable<System.DateTime> _BLOCKEDDATE;
		
		private long _USERID;
		
		private System.DateTime _CREATEDDATE;
		
		private EntitySet<DEVICETRANSACTION> _DEVICETRANSACTIONs;
		
		private EntityRef<STATUS> _STATUS;
		
		private EntityRef<USER> _USER;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDEVICEIDChanging(long value);
    partial void OnDEVICEIDChanged();
    partial void OnDEVICETYPEChanging(string value);
    partial void OnDEVICETYPEChanged();
    partial void OnPRODUCTSERIALChanging(string value);
    partial void OnPRODUCTSERIALChanged();
    partial void OnDEVICEDETAILSChanging(string value);
    partial void OnDEVICEDETAILSChanged();
    partial void OnDEVICETAGChanging(string value);
    partial void OnDEVICETAGChanged();
    partial void OnSTATUSIDChanging(int value);
    partial void OnSTATUSIDChanged();
    partial void OnCOMPANYOWNERChanging(string value);
    partial void OnCOMPANYOWNERChanged();
    partial void OnNOTEChanging(string value);
    partial void OnNOTEChanged();
    partial void OnBLOCKEDDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnBLOCKEDDATEChanged();
    partial void OnUSERIDChanging(long value);
    partial void OnUSERIDChanged();
    partial void OnCREATEDDATEChanging(System.DateTime value);
    partial void OnCREATEDDATEChanged();
    #endregion
		
		public DEVICE()
		{
			this._DEVICETRANSACTIONs = new EntitySet<DEVICETRANSACTION>(new Action<DEVICETRANSACTION>(this.attach_DEVICETRANSACTIONs), new Action<DEVICETRANSACTION>(this.detach_DEVICETRANSACTIONs));
			this._STATUS = default(EntityRef<STATUS>);
			this._USER = default(EntityRef<USER>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DEVICEID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long DEVICEID
		{
			get
			{
				return this._DEVICEID;
			}
			set
			{
				if ((this._DEVICEID != value))
				{
					this.OnDEVICEIDChanging(value);
					this.SendPropertyChanging();
					this._DEVICEID = value;
					this.SendPropertyChanged("DEVICEID");
					this.OnDEVICEIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DEVICETYPE", DbType="NVarChar(250)")]
		public string DEVICETYPE
		{
			get
			{
				return this._DEVICETYPE;
			}
			set
			{
				if ((this._DEVICETYPE != value))
				{
					this.OnDEVICETYPEChanging(value);
					this.SendPropertyChanging();
					this._DEVICETYPE = value;
					this.SendPropertyChanged("DEVICETYPE");
					this.OnDEVICETYPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRODUCTSERIAL", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
		public string PRODUCTSERIAL
		{
			get
			{
				return this._PRODUCTSERIAL;
			}
			set
			{
				if ((this._PRODUCTSERIAL != value))
				{
					this.OnPRODUCTSERIALChanging(value);
					this.SendPropertyChanging();
					this._PRODUCTSERIAL = value;
					this.SendPropertyChanged("PRODUCTSERIAL");
					this.OnPRODUCTSERIALChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DEVICEDETAILS", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string DEVICEDETAILS
		{
			get
			{
				return this._DEVICEDETAILS;
			}
			set
			{
				if ((this._DEVICEDETAILS != value))
				{
					this.OnDEVICEDETAILSChanging(value);
					this.SendPropertyChanging();
					this._DEVICEDETAILS = value;
					this.SendPropertyChanged("DEVICEDETAILS");
					this.OnDEVICEDETAILSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DEVICETAG", DbType="NVarChar(25)")]
		public string DEVICETAG
		{
			get
			{
				return this._DEVICETAG;
			}
			set
			{
				if ((this._DEVICETAG != value))
				{
					this.OnDEVICETAGChanging(value);
					this.SendPropertyChanging();
					this._DEVICETAG = value;
					this.SendPropertyChanged("DEVICETAG");
					this.OnDEVICETAGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATUSID", DbType="Int NOT NULL")]
		public int STATUSID
		{
			get
			{
				return this._STATUSID;
			}
			set
			{
				if ((this._STATUSID != value))
				{
					if (this._STATUS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSTATUSIDChanging(value);
					this.SendPropertyChanging();
					this._STATUSID = value;
					this.SendPropertyChanged("STATUSID");
					this.OnSTATUSIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COMPANYOWNER", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string COMPANYOWNER
		{
			get
			{
				return this._COMPANYOWNER;
			}
			set
			{
				if ((this._COMPANYOWNER != value))
				{
					this.OnCOMPANYOWNERChanging(value);
					this.SendPropertyChanging();
					this._COMPANYOWNER = value;
					this.SendPropertyChanged("COMPANYOWNER");
					this.OnCOMPANYOWNERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOTE", DbType="NVarChar(MAX)")]
		public string NOTE
		{
			get
			{
				return this._NOTE;
			}
			set
			{
				if ((this._NOTE != value))
				{
					this.OnNOTEChanging(value);
					this.SendPropertyChanging();
					this._NOTE = value;
					this.SendPropertyChanged("NOTE");
					this.OnNOTEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BLOCKEDDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> BLOCKEDDATE
		{
			get
			{
				return this._BLOCKEDDATE;
			}
			set
			{
				if ((this._BLOCKEDDATE != value))
				{
					this.OnBLOCKEDDATEChanging(value);
					this.SendPropertyChanging();
					this._BLOCKEDDATE = value;
					this.SendPropertyChanged("BLOCKEDDATE");
					this.OnBLOCKEDDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USERID", DbType="BigInt NOT NULL")]
		public long USERID
		{
			get
			{
				return this._USERID;
			}
			set
			{
				if ((this._USERID != value))
				{
					if (this._USER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUSERIDChanging(value);
					this.SendPropertyChanging();
					this._USERID = value;
					this.SendPropertyChanged("USERID");
					this.OnUSERIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATEDDATE", DbType="DateTime NOT NULL")]
		public System.DateTime CREATEDDATE
		{
			get
			{
				return this._CREATEDDATE;
			}
			set
			{
				if ((this._CREATEDDATE != value))
				{
					this.OnCREATEDDATEChanging(value);
					this.SendPropertyChanging();
					this._CREATEDDATE = value;
					this.SendPropertyChanged("CREATEDDATE");
					this.OnCREATEDDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DEVICE_DEVICETRANSACTION", Storage="_DEVICETRANSACTIONs", ThisKey="DEVICEID", OtherKey="DEVICEID")]
		public EntitySet<DEVICETRANSACTION> DEVICETRANSACTIONs
		{
			get
			{
				return this._DEVICETRANSACTIONs;
			}
			set
			{
				this._DEVICETRANSACTIONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="STATUS_DEVICE", Storage="_STATUS", ThisKey="STATUSID", OtherKey="STATUSID", IsForeignKey=true)]
		public STATUS STATUS
		{
			get
			{
				return this._STATUS.Entity;
			}
			set
			{
				STATUS previousValue = this._STATUS.Entity;
				if (((previousValue != value) 
							|| (this._STATUS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._STATUS.Entity = null;
						previousValue.DEVICEs.Remove(this);
					}
					this._STATUS.Entity = value;
					if ((value != null))
					{
						value.DEVICEs.Add(this);
						this._STATUSID = value.STATUSID;
					}
					else
					{
						this._STATUSID = default(int);
					}
					this.SendPropertyChanged("STATUS");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="USER_DEVICE", Storage="_USER", ThisKey="USERID", OtherKey="USERID", IsForeignKey=true)]
		public USER USER
		{
			get
			{
				return this._USER.Entity;
			}
			set
			{
				USER previousValue = this._USER.Entity;
				if (((previousValue != value) 
							|| (this._USER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._USER.Entity = null;
						previousValue.DEVICEs.Remove(this);
					}
					this._USER.Entity = value;
					if ((value != null))
					{
						value.DEVICEs.Add(this);
						this._USERID = value.USERID;
					}
					else
					{
						this._USERID = default(long);
					}
					this.SendPropertyChanged("USER");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DEVICETRANSACTIONs(DEVICETRANSACTION entity)
		{
			this.SendPropertyChanging();
			entity.DEVICE = this;
		}
		
		private void detach_DEVICETRANSACTIONs(DEVICETRANSACTION entity)
		{
			this.SendPropertyChanging();
			entity.DEVICE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DEVICETRANSACTION")]
	public partial class DEVICETRANSACTION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _SERIALNO;
		
		private long _DEVICEID;
		
		private System.Nullable<long> _OUTLETID;
		
		private System.Nullable<System.DateTime> _DELIVERYDATE;
		
		private string _DC;
		
		private System.Nullable<System.DateTime> _DCDATE;
		
		private string _DCFILE;
		
		private string _RDC;
		
		private System.Nullable<System.DateTime> _RDCDATE;
		
		private string _HIC;
		
		private System.Nullable<System.DateTime> _HICDATE;
		
		private bool _INSURED;
		
		private string _INSURANCECLAIM;
		
		private string _DAMAGEDOLDDEVICE;
		
		private System.Nullable<System.DateTime> _TRANSFEROWNERSHIPDATE;
		
		private string _REMARKS;
		
		private int _STATUSID;
		
		private long _USERID;
		
		private System.DateTime _CREATEDDATE;
		
		private System.Nullable<bool> _CURRENTSTATUS;
		
		private EntityRef<DEVICE> _DEVICE;
		
		private EntityRef<STATUS> _STATUS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSERIALNOChanging(long value);
    partial void OnSERIALNOChanged();
    partial void OnDEVICEIDChanging(long value);
    partial void OnDEVICEIDChanged();
    partial void OnOUTLETIDChanging(System.Nullable<long> value);
    partial void OnOUTLETIDChanged();
    partial void OnDELIVERYDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnDELIVERYDATEChanged();
    partial void OnDCChanging(string value);
    partial void OnDCChanged();
    partial void OnDCDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnDCDATEChanged();
    partial void OnDCFILEChanging(string value);
    partial void OnDCFILEChanged();
    partial void OnRDCChanging(string value);
    partial void OnRDCChanged();
    partial void OnRDCDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnRDCDATEChanged();
    partial void OnHICChanging(string value);
    partial void OnHICChanged();
    partial void OnHICDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnHICDATEChanged();
    partial void OnINSUREDChanging(bool value);
    partial void OnINSUREDChanged();
    partial void OnINSURANCECLAIMChanging(string value);
    partial void OnINSURANCECLAIMChanged();
    partial void OnDAMAGEDOLDDEVICEChanging(string value);
    partial void OnDAMAGEDOLDDEVICEChanged();
    partial void OnTRANSFEROWNERSHIPDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnTRANSFEROWNERSHIPDATEChanged();
    partial void OnREMARKSChanging(string value);
    partial void OnREMARKSChanged();
    partial void OnSTATUSIDChanging(int value);
    partial void OnSTATUSIDChanged();
    partial void OnUSERIDChanging(long value);
    partial void OnUSERIDChanged();
    partial void OnCREATEDDATEChanging(System.DateTime value);
    partial void OnCREATEDDATEChanged();
    partial void OnCURRENTSTATUSChanging(System.Nullable<bool> value);
    partial void OnCURRENTSTATUSChanged();
    #endregion
		
		public DEVICETRANSACTION()
		{
			this._DEVICE = default(EntityRef<DEVICE>);
			this._STATUS = default(EntityRef<STATUS>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SERIALNO", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long SERIALNO
		{
			get
			{
				return this._SERIALNO;
			}
			set
			{
				if ((this._SERIALNO != value))
				{
					this.OnSERIALNOChanging(value);
					this.SendPropertyChanging();
					this._SERIALNO = value;
					this.SendPropertyChanged("SERIALNO");
					this.OnSERIALNOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DEVICEID", DbType="BigInt NOT NULL")]
		public long DEVICEID
		{
			get
			{
				return this._DEVICEID;
			}
			set
			{
				if ((this._DEVICEID != value))
				{
					if (this._DEVICE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDEVICEIDChanging(value);
					this.SendPropertyChanging();
					this._DEVICEID = value;
					this.SendPropertyChanged("DEVICEID");
					this.OnDEVICEIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OUTLETID", DbType="BigInt")]
		public System.Nullable<long> OUTLETID
		{
			get
			{
				return this._OUTLETID;
			}
			set
			{
				if ((this._OUTLETID != value))
				{
					this.OnOUTLETIDChanging(value);
					this.SendPropertyChanging();
					this._OUTLETID = value;
					this.SendPropertyChanged("OUTLETID");
					this.OnOUTLETIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DELIVERYDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> DELIVERYDATE
		{
			get
			{
				return this._DELIVERYDATE;
			}
			set
			{
				if ((this._DELIVERYDATE != value))
				{
					this.OnDELIVERYDATEChanging(value);
					this.SendPropertyChanging();
					this._DELIVERYDATE = value;
					this.SendPropertyChanged("DELIVERYDATE");
					this.OnDELIVERYDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DC", DbType="NVarChar(20)")]
		public string DC
		{
			get
			{
				return this._DC;
			}
			set
			{
				if ((this._DC != value))
				{
					this.OnDCChanging(value);
					this.SendPropertyChanging();
					this._DC = value;
					this.SendPropertyChanged("DC");
					this.OnDCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DCDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> DCDATE
		{
			get
			{
				return this._DCDATE;
			}
			set
			{
				if ((this._DCDATE != value))
				{
					this.OnDCDATEChanging(value);
					this.SendPropertyChanging();
					this._DCDATE = value;
					this.SendPropertyChanged("DCDATE");
					this.OnDCDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DCFILE", DbType="NVarChar(MAX)")]
		public string DCFILE
		{
			get
			{
				return this._DCFILE;
			}
			set
			{
				if ((this._DCFILE != value))
				{
					this.OnDCFILEChanging(value);
					this.SendPropertyChanging();
					this._DCFILE = value;
					this.SendPropertyChanged("DCFILE");
					this.OnDCFILEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RDC", DbType="NVarChar(20)")]
		public string RDC
		{
			get
			{
				return this._RDC;
			}
			set
			{
				if ((this._RDC != value))
				{
					this.OnRDCChanging(value);
					this.SendPropertyChanging();
					this._RDC = value;
					this.SendPropertyChanged("RDC");
					this.OnRDCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RDCDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> RDCDATE
		{
			get
			{
				return this._RDCDATE;
			}
			set
			{
				if ((this._RDCDATE != value))
				{
					this.OnRDCDATEChanging(value);
					this.SendPropertyChanging();
					this._RDCDATE = value;
					this.SendPropertyChanged("RDCDATE");
					this.OnRDCDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HIC", DbType="NVarChar(20)")]
		public string HIC
		{
			get
			{
				return this._HIC;
			}
			set
			{
				if ((this._HIC != value))
				{
					this.OnHICChanging(value);
					this.SendPropertyChanging();
					this._HIC = value;
					this.SendPropertyChanged("HIC");
					this.OnHICChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HICDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> HICDATE
		{
			get
			{
				return this._HICDATE;
			}
			set
			{
				if ((this._HICDATE != value))
				{
					this.OnHICDATEChanging(value);
					this.SendPropertyChanging();
					this._HICDATE = value;
					this.SendPropertyChanged("HICDATE");
					this.OnHICDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INSURED", DbType="Bit NOT NULL")]
		public bool INSURED
		{
			get
			{
				return this._INSURED;
			}
			set
			{
				if ((this._INSURED != value))
				{
					this.OnINSUREDChanging(value);
					this.SendPropertyChanging();
					this._INSURED = value;
					this.SendPropertyChanged("INSURED");
					this.OnINSUREDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INSURANCECLAIM", DbType="NVarChar(25)")]
		public string INSURANCECLAIM
		{
			get
			{
				return this._INSURANCECLAIM;
			}
			set
			{
				if ((this._INSURANCECLAIM != value))
				{
					this.OnINSURANCECLAIMChanging(value);
					this.SendPropertyChanging();
					this._INSURANCECLAIM = value;
					this.SendPropertyChanged("INSURANCECLAIM");
					this.OnINSURANCECLAIMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DAMAGEDOLDDEVICE", DbType="NVarChar(25)")]
		public string DAMAGEDOLDDEVICE
		{
			get
			{
				return this._DAMAGEDOLDDEVICE;
			}
			set
			{
				if ((this._DAMAGEDOLDDEVICE != value))
				{
					this.OnDAMAGEDOLDDEVICEChanging(value);
					this.SendPropertyChanging();
					this._DAMAGEDOLDDEVICE = value;
					this.SendPropertyChanged("DAMAGEDOLDDEVICE");
					this.OnDAMAGEDOLDDEVICEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRANSFEROWNERSHIPDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> TRANSFEROWNERSHIPDATE
		{
			get
			{
				return this._TRANSFEROWNERSHIPDATE;
			}
			set
			{
				if ((this._TRANSFEROWNERSHIPDATE != value))
				{
					this.OnTRANSFEROWNERSHIPDATEChanging(value);
					this.SendPropertyChanging();
					this._TRANSFEROWNERSHIPDATE = value;
					this.SendPropertyChanged("TRANSFEROWNERSHIPDATE");
					this.OnTRANSFEROWNERSHIPDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REMARKS", DbType="NVarChar(MAX)")]
		public string REMARKS
		{
			get
			{
				return this._REMARKS;
			}
			set
			{
				if ((this._REMARKS != value))
				{
					this.OnREMARKSChanging(value);
					this.SendPropertyChanging();
					this._REMARKS = value;
					this.SendPropertyChanged("REMARKS");
					this.OnREMARKSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATUSID", DbType="Int NOT NULL")]
		public int STATUSID
		{
			get
			{
				return this._STATUSID;
			}
			set
			{
				if ((this._STATUSID != value))
				{
					if (this._STATUS.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSTATUSIDChanging(value);
					this.SendPropertyChanging();
					this._STATUSID = value;
					this.SendPropertyChanged("STATUSID");
					this.OnSTATUSIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USERID", DbType="BigInt NOT NULL")]
		public long USERID
		{
			get
			{
				return this._USERID;
			}
			set
			{
				if ((this._USERID != value))
				{
					this.OnUSERIDChanging(value);
					this.SendPropertyChanging();
					this._USERID = value;
					this.SendPropertyChanged("USERID");
					this.OnUSERIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATEDDATE", DbType="DateTime NOT NULL")]
		public System.DateTime CREATEDDATE
		{
			get
			{
				return this._CREATEDDATE;
			}
			set
			{
				if ((this._CREATEDDATE != value))
				{
					this.OnCREATEDDATEChanging(value);
					this.SendPropertyChanging();
					this._CREATEDDATE = value;
					this.SendPropertyChanged("CREATEDDATE");
					this.OnCREATEDDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CURRENTSTATUS", DbType="Bit")]
		public System.Nullable<bool> CURRENTSTATUS
		{
			get
			{
				return this._CURRENTSTATUS;
			}
			set
			{
				if ((this._CURRENTSTATUS != value))
				{
					this.OnCURRENTSTATUSChanging(value);
					this.SendPropertyChanging();
					this._CURRENTSTATUS = value;
					this.SendPropertyChanged("CURRENTSTATUS");
					this.OnCURRENTSTATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DEVICE_DEVICETRANSACTION", Storage="_DEVICE", ThisKey="DEVICEID", OtherKey="DEVICEID", IsForeignKey=true)]
		public DEVICE DEVICE
		{
			get
			{
				return this._DEVICE.Entity;
			}
			set
			{
				DEVICE previousValue = this._DEVICE.Entity;
				if (((previousValue != value) 
							|| (this._DEVICE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DEVICE.Entity = null;
						previousValue.DEVICETRANSACTIONs.Remove(this);
					}
					this._DEVICE.Entity = value;
					if ((value != null))
					{
						value.DEVICETRANSACTIONs.Add(this);
						this._DEVICEID = value.DEVICEID;
					}
					else
					{
						this._DEVICEID = default(long);
					}
					this.SendPropertyChanged("DEVICE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="STATUS_DEVICETRANSACTION", Storage="_STATUS", ThisKey="STATUSID", OtherKey="STATUSID", IsForeignKey=true)]
		public STATUS STATUS
		{
			get
			{
				return this._STATUS.Entity;
			}
			set
			{
				STATUS previousValue = this._STATUS.Entity;
				if (((previousValue != value) 
							|| (this._STATUS.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._STATUS.Entity = null;
						previousValue.DEVICETRANSACTIONs.Remove(this);
					}
					this._STATUS.Entity = value;
					if ((value != null))
					{
						value.DEVICETRANSACTIONs.Add(this);
						this._STATUSID = value.STATUSID;
					}
					else
					{
						this._STATUSID = default(int);
					}
					this.SendPropertyChanged("STATUS");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DEVICETYPE")]
	public partial class DEVICETYPE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _SERIALNO;
		
		private string _DEVICETYPE1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSERIALNOChanging(long value);
    partial void OnSERIALNOChanged();
    partial void OnDEVICETYPE1Changing(string value);
    partial void OnDEVICETYPE1Changed();
    #endregion
		
		public DEVICETYPE()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SERIALNO", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long SERIALNO
		{
			get
			{
				return this._SERIALNO;
			}
			set
			{
				if ((this._SERIALNO != value))
				{
					this.OnSERIALNOChanging(value);
					this.SendPropertyChanging();
					this._SERIALNO = value;
					this.SendPropertyChanged("SERIALNO");
					this.OnSERIALNOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="DEVICETYPE", Storage="_DEVICETYPE1", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string DEVICETYPE1
		{
			get
			{
				return this._DEVICETYPE1;
			}
			set
			{
				if ((this._DEVICETYPE1 != value))
				{
					this.OnDEVICETYPE1Changing(value);
					this.SendPropertyChanging();
					this._DEVICETYPE1 = value;
					this.SendPropertyChanged("DEVICETYPE1");
					this.OnDEVICETYPE1Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OUTLET")]
	public partial class OUTLET : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _OUTLETID;
		
		private string _OUTLETNAME;
		
		private string _ADDRESS;
		
		private int _CITYID;
		
		private long _CLIENTID;
		
		private bool _ACTIVATED;
		
		private long _USERID;
		
		private System.DateTime _CREATEDDATE;
		
		private EntityRef<CITY> _CITY;
		
		private EntityRef<CLIENT> _CLIENT;
		
		private EntityRef<USER> _USER;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOUTLETIDChanging(long value);
    partial void OnOUTLETIDChanged();
    partial void OnOUTLETNAMEChanging(string value);
    partial void OnOUTLETNAMEChanged();
    partial void OnADDRESSChanging(string value);
    partial void OnADDRESSChanged();
    partial void OnCITYIDChanging(int value);
    partial void OnCITYIDChanged();
    partial void OnCLIENTIDChanging(long value);
    partial void OnCLIENTIDChanged();
    partial void OnACTIVATEDChanging(bool value);
    partial void OnACTIVATEDChanged();
    partial void OnUSERIDChanging(long value);
    partial void OnUSERIDChanged();
    partial void OnCREATEDDATEChanging(System.DateTime value);
    partial void OnCREATEDDATEChanged();
    #endregion
		
		public OUTLET()
		{
			this._CITY = default(EntityRef<CITY>);
			this._CLIENT = default(EntityRef<CLIENT>);
			this._USER = default(EntityRef<USER>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OUTLETID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long OUTLETID
		{
			get
			{
				return this._OUTLETID;
			}
			set
			{
				if ((this._OUTLETID != value))
				{
					this.OnOUTLETIDChanging(value);
					this.SendPropertyChanging();
					this._OUTLETID = value;
					this.SendPropertyChanged("OUTLETID");
					this.OnOUTLETIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OUTLETNAME", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string OUTLETNAME
		{
			get
			{
				return this._OUTLETNAME;
			}
			set
			{
				if ((this._OUTLETNAME != value))
				{
					this.OnOUTLETNAMEChanging(value);
					this.SendPropertyChanging();
					this._OUTLETNAME = value;
					this.SendPropertyChanged("OUTLETNAME");
					this.OnOUTLETNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADDRESS", DbType="NVarChar(MAX)")]
		public string ADDRESS
		{
			get
			{
				return this._ADDRESS;
			}
			set
			{
				if ((this._ADDRESS != value))
				{
					this.OnADDRESSChanging(value);
					this.SendPropertyChanging();
					this._ADDRESS = value;
					this.SendPropertyChanged("ADDRESS");
					this.OnADDRESSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CITYID", DbType="Int NOT NULL")]
		public int CITYID
		{
			get
			{
				return this._CITYID;
			}
			set
			{
				if ((this._CITYID != value))
				{
					if (this._CITY.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCITYIDChanging(value);
					this.SendPropertyChanging();
					this._CITYID = value;
					this.SendPropertyChanged("CITYID");
					this.OnCITYIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CLIENTID", DbType="BigInt NOT NULL")]
		public long CLIENTID
		{
			get
			{
				return this._CLIENTID;
			}
			set
			{
				if ((this._CLIENTID != value))
				{
					if (this._CLIENT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCLIENTIDChanging(value);
					this.SendPropertyChanging();
					this._CLIENTID = value;
					this.SendPropertyChanged("CLIENTID");
					this.OnCLIENTIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACTIVATED", DbType="Bit NOT NULL")]
		public bool ACTIVATED
		{
			get
			{
				return this._ACTIVATED;
			}
			set
			{
				if ((this._ACTIVATED != value))
				{
					this.OnACTIVATEDChanging(value);
					this.SendPropertyChanging();
					this._ACTIVATED = value;
					this.SendPropertyChanged("ACTIVATED");
					this.OnACTIVATEDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USERID", DbType="BigInt NOT NULL")]
		public long USERID
		{
			get
			{
				return this._USERID;
			}
			set
			{
				if ((this._USERID != value))
				{
					if (this._USER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUSERIDChanging(value);
					this.SendPropertyChanging();
					this._USERID = value;
					this.SendPropertyChanged("USERID");
					this.OnUSERIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATEDDATE", DbType="DateTime NOT NULL")]
		public System.DateTime CREATEDDATE
		{
			get
			{
				return this._CREATEDDATE;
			}
			set
			{
				if ((this._CREATEDDATE != value))
				{
					this.OnCREATEDDATEChanging(value);
					this.SendPropertyChanging();
					this._CREATEDDATE = value;
					this.SendPropertyChanged("CREATEDDATE");
					this.OnCREATEDDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CITY_OUTLET", Storage="_CITY", ThisKey="CITYID", OtherKey="CITYID", IsForeignKey=true)]
		public CITY CITY
		{
			get
			{
				return this._CITY.Entity;
			}
			set
			{
				CITY previousValue = this._CITY.Entity;
				if (((previousValue != value) 
							|| (this._CITY.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CITY.Entity = null;
						previousValue.OUTLETs.Remove(this);
					}
					this._CITY.Entity = value;
					if ((value != null))
					{
						value.OUTLETs.Add(this);
						this._CITYID = value.CITYID;
					}
					else
					{
						this._CITYID = default(int);
					}
					this.SendPropertyChanged("CITY");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CLIENT_OUTLET", Storage="_CLIENT", ThisKey="CLIENTID", OtherKey="CLIENTID", IsForeignKey=true)]
		public CLIENT CLIENT
		{
			get
			{
				return this._CLIENT.Entity;
			}
			set
			{
				CLIENT previousValue = this._CLIENT.Entity;
				if (((previousValue != value) 
							|| (this._CLIENT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CLIENT.Entity = null;
						previousValue.OUTLETs.Remove(this);
					}
					this._CLIENT.Entity = value;
					if ((value != null))
					{
						value.OUTLETs.Add(this);
						this._CLIENTID = value.CLIENTID;
					}
					else
					{
						this._CLIENTID = default(long);
					}
					this.SendPropertyChanged("CLIENT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="USER_OUTLET", Storage="_USER", ThisKey="USERID", OtherKey="USERID", IsForeignKey=true)]
		public USER USER
		{
			get
			{
				return this._USER.Entity;
			}
			set
			{
				USER previousValue = this._USER.Entity;
				if (((previousValue != value) 
							|| (this._USER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._USER.Entity = null;
						previousValue.OUTLETs.Remove(this);
					}
					this._USER.Entity = value;
					if ((value != null))
					{
						value.OUTLETs.Add(this);
						this._USERID = value.USERID;
					}
					else
					{
						this._USERID = default(long);
					}
					this.SendPropertyChanged("USER");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ROLE")]
	public partial class ROLE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ROLEID;
		
		private string _ROLENAME;
		
		private bool _ACTIVATED;
		
		private EntitySet<USER> _USERs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnROLEIDChanging(int value);
    partial void OnROLEIDChanged();
    partial void OnROLENAMEChanging(string value);
    partial void OnROLENAMEChanged();
    partial void OnACTIVATEDChanging(bool value);
    partial void OnACTIVATEDChanged();
    #endregion
		
		public ROLE()
		{
			this._USERs = new EntitySet<USER>(new Action<USER>(this.attach_USERs), new Action<USER>(this.detach_USERs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROLEID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ROLEID
		{
			get
			{
				return this._ROLEID;
			}
			set
			{
				if ((this._ROLEID != value))
				{
					this.OnROLEIDChanging(value);
					this.SendPropertyChanging();
					this._ROLEID = value;
					this.SendPropertyChanged("ROLEID");
					this.OnROLEIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROLENAME", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string ROLENAME
		{
			get
			{
				return this._ROLENAME;
			}
			set
			{
				if ((this._ROLENAME != value))
				{
					this.OnROLENAMEChanging(value);
					this.SendPropertyChanging();
					this._ROLENAME = value;
					this.SendPropertyChanged("ROLENAME");
					this.OnROLENAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACTIVATED", DbType="Bit NOT NULL")]
		public bool ACTIVATED
		{
			get
			{
				return this._ACTIVATED;
			}
			set
			{
				if ((this._ACTIVATED != value))
				{
					this.OnACTIVATEDChanging(value);
					this.SendPropertyChanging();
					this._ACTIVATED = value;
					this.SendPropertyChanged("ACTIVATED");
					this.OnACTIVATEDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ROLE_USER", Storage="_USERs", ThisKey="ROLEID", OtherKey="ROLEID")]
		public EntitySet<USER> USERs
		{
			get
			{
				return this._USERs;
			}
			set
			{
				this._USERs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_USERs(USER entity)
		{
			this.SendPropertyChanging();
			entity.ROLE = this;
		}
		
		private void detach_USERs(USER entity)
		{
			this.SendPropertyChanging();
			entity.ROLE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SETTINGS")]
	public partial class SETTING : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _SERIALNO;
		
		private string _SETTINGSNAME;
		
		private string _SETTINGSVALUE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSERIALNOChanging(long value);
    partial void OnSERIALNOChanged();
    partial void OnSETTINGSNAMEChanging(string value);
    partial void OnSETTINGSNAMEChanged();
    partial void OnSETTINGSVALUEChanging(string value);
    partial void OnSETTINGSVALUEChanged();
    #endregion
		
		public SETTING()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SERIALNO", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long SERIALNO
		{
			get
			{
				return this._SERIALNO;
			}
			set
			{
				if ((this._SERIALNO != value))
				{
					this.OnSERIALNOChanging(value);
					this.SendPropertyChanging();
					this._SERIALNO = value;
					this.SendPropertyChanged("SERIALNO");
					this.OnSERIALNOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SETTINGSNAME", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string SETTINGSNAME
		{
			get
			{
				return this._SETTINGSNAME;
			}
			set
			{
				if ((this._SETTINGSNAME != value))
				{
					this.OnSETTINGSNAMEChanging(value);
					this.SendPropertyChanging();
					this._SETTINGSNAME = value;
					this.SendPropertyChanged("SETTINGSNAME");
					this.OnSETTINGSNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SETTINGSVALUE", DbType="NVarChar(250)")]
		public string SETTINGSVALUE
		{
			get
			{
				return this._SETTINGSVALUE;
			}
			set
			{
				if ((this._SETTINGSVALUE != value))
				{
					this.OnSETTINGSVALUEChanging(value);
					this.SendPropertyChanging();
					this._SETTINGSVALUE = value;
					this.SendPropertyChanged("SETTINGSVALUE");
					this.OnSETTINGSVALUEChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.STATUS")]
	public partial class STATUS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _STATUSID;
		
		private string _STATUSNAME;
		
		private System.Nullable<int> _DISPLAYORDER;
		
		private EntitySet<DEVICE> _DEVICEs;
		
		private EntitySet<DEVICETRANSACTION> _DEVICETRANSACTIONs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSTATUSIDChanging(int value);
    partial void OnSTATUSIDChanged();
    partial void OnSTATUSNAMEChanging(string value);
    partial void OnSTATUSNAMEChanged();
    partial void OnDISPLAYORDERChanging(System.Nullable<int> value);
    partial void OnDISPLAYORDERChanged();
    #endregion
		
		public STATUS()
		{
			this._DEVICEs = new EntitySet<DEVICE>(new Action<DEVICE>(this.attach_DEVICEs), new Action<DEVICE>(this.detach_DEVICEs));
			this._DEVICETRANSACTIONs = new EntitySet<DEVICETRANSACTION>(new Action<DEVICETRANSACTION>(this.attach_DEVICETRANSACTIONs), new Action<DEVICETRANSACTION>(this.detach_DEVICETRANSACTIONs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATUSID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int STATUSID
		{
			get
			{
				return this._STATUSID;
			}
			set
			{
				if ((this._STATUSID != value))
				{
					this.OnSTATUSIDChanging(value);
					this.SendPropertyChanging();
					this._STATUSID = value;
					this.SendPropertyChanged("STATUSID");
					this.OnSTATUSIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATUSNAME", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string STATUSNAME
		{
			get
			{
				return this._STATUSNAME;
			}
			set
			{
				if ((this._STATUSNAME != value))
				{
					this.OnSTATUSNAMEChanging(value);
					this.SendPropertyChanging();
					this._STATUSNAME = value;
					this.SendPropertyChanged("STATUSNAME");
					this.OnSTATUSNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DISPLAYORDER", DbType="Int")]
		public System.Nullable<int> DISPLAYORDER
		{
			get
			{
				return this._DISPLAYORDER;
			}
			set
			{
				if ((this._DISPLAYORDER != value))
				{
					this.OnDISPLAYORDERChanging(value);
					this.SendPropertyChanging();
					this._DISPLAYORDER = value;
					this.SendPropertyChanged("DISPLAYORDER");
					this.OnDISPLAYORDERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="STATUS_DEVICE", Storage="_DEVICEs", ThisKey="STATUSID", OtherKey="STATUSID")]
		public EntitySet<DEVICE> DEVICEs
		{
			get
			{
				return this._DEVICEs;
			}
			set
			{
				this._DEVICEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="STATUS_DEVICETRANSACTION", Storage="_DEVICETRANSACTIONs", ThisKey="STATUSID", OtherKey="STATUSID")]
		public EntitySet<DEVICETRANSACTION> DEVICETRANSACTIONs
		{
			get
			{
				return this._DEVICETRANSACTIONs;
			}
			set
			{
				this._DEVICETRANSACTIONs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DEVICEs(DEVICE entity)
		{
			this.SendPropertyChanging();
			entity.STATUS = this;
		}
		
		private void detach_DEVICEs(DEVICE entity)
		{
			this.SendPropertyChanging();
			entity.STATUS = null;
		}
		
		private void attach_DEVICETRANSACTIONs(DEVICETRANSACTION entity)
		{
			this.SendPropertyChanging();
			entity.STATUS = this;
		}
		
		private void detach_DEVICETRANSACTIONs(DEVICETRANSACTION entity)
		{
			this.SendPropertyChanging();
			entity.STATUS = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.USERS")]
	public partial class USER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _USERID;
		
		private string _USERNAME;
		
		private string _PASSWORD;
		
		private string _EMAIL;
		
		private int _ROLEID;
		
		private System.Nullable<bool> _LOCKEDOUTENABLED;
		
		private bool _ACTIVATED;
		
		private bool _RESETPASSWORD;
		
		private EntitySet<DEVICE> _DEVICEs;
		
		private EntitySet<OUTLET> _OUTLETs;
		
		private EntityRef<ROLE> _ROLE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUSERIDChanging(long value);
    partial void OnUSERIDChanged();
    partial void OnUSERNAMEChanging(string value);
    partial void OnUSERNAMEChanged();
    partial void OnPASSWORDChanging(string value);
    partial void OnPASSWORDChanged();
    partial void OnEMAILChanging(string value);
    partial void OnEMAILChanged();
    partial void OnROLEIDChanging(int value);
    partial void OnROLEIDChanged();
    partial void OnLOCKEDOUTENABLEDChanging(System.Nullable<bool> value);
    partial void OnLOCKEDOUTENABLEDChanged();
    partial void OnACTIVATEDChanging(bool value);
    partial void OnACTIVATEDChanged();
    partial void OnRESETPASSWORDChanging(bool value);
    partial void OnRESETPASSWORDChanged();
    #endregion
		
		public USER()
		{
			this._DEVICEs = new EntitySet<DEVICE>(new Action<DEVICE>(this.attach_DEVICEs), new Action<DEVICE>(this.detach_DEVICEs));
			this._OUTLETs = new EntitySet<OUTLET>(new Action<OUTLET>(this.attach_OUTLETs), new Action<OUTLET>(this.detach_OUTLETs));
			this._ROLE = default(EntityRef<ROLE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USERID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long USERID
		{
			get
			{
				return this._USERID;
			}
			set
			{
				if ((this._USERID != value))
				{
					this.OnUSERIDChanging(value);
					this.SendPropertyChanging();
					this._USERID = value;
					this.SendPropertyChanged("USERID");
					this.OnUSERIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USERNAME", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string USERNAME
		{
			get
			{
				return this._USERNAME;
			}
			set
			{
				if ((this._USERNAME != value))
				{
					this.OnUSERNAMEChanging(value);
					this.SendPropertyChanging();
					this._USERNAME = value;
					this.SendPropertyChanged("USERNAME");
					this.OnUSERNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PASSWORD", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
		public string PASSWORD
		{
			get
			{
				return this._PASSWORD;
			}
			set
			{
				if ((this._PASSWORD != value))
				{
					this.OnPASSWORDChanging(value);
					this.SendPropertyChanging();
					this._PASSWORD = value;
					this.SendPropertyChanged("PASSWORD");
					this.OnPASSWORDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="NVarChar(250)")]
		public string EMAIL
		{
			get
			{
				return this._EMAIL;
			}
			set
			{
				if ((this._EMAIL != value))
				{
					this.OnEMAILChanging(value);
					this.SendPropertyChanging();
					this._EMAIL = value;
					this.SendPropertyChanged("EMAIL");
					this.OnEMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROLEID", DbType="Int NOT NULL")]
		public int ROLEID
		{
			get
			{
				return this._ROLEID;
			}
			set
			{
				if ((this._ROLEID != value))
				{
					if (this._ROLE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnROLEIDChanging(value);
					this.SendPropertyChanging();
					this._ROLEID = value;
					this.SendPropertyChanged("ROLEID");
					this.OnROLEIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LOCKEDOUTENABLED", DbType="Bit")]
		public System.Nullable<bool> LOCKEDOUTENABLED
		{
			get
			{
				return this._LOCKEDOUTENABLED;
			}
			set
			{
				if ((this._LOCKEDOUTENABLED != value))
				{
					this.OnLOCKEDOUTENABLEDChanging(value);
					this.SendPropertyChanging();
					this._LOCKEDOUTENABLED = value;
					this.SendPropertyChanged("LOCKEDOUTENABLED");
					this.OnLOCKEDOUTENABLEDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACTIVATED", DbType="Bit NOT NULL")]
		public bool ACTIVATED
		{
			get
			{
				return this._ACTIVATED;
			}
			set
			{
				if ((this._ACTIVATED != value))
				{
					this.OnACTIVATEDChanging(value);
					this.SendPropertyChanging();
					this._ACTIVATED = value;
					this.SendPropertyChanged("ACTIVATED");
					this.OnACTIVATEDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RESETPASSWORD", DbType="Bit NOT NULL")]
		public bool RESETPASSWORD
		{
			get
			{
				return this._RESETPASSWORD;
			}
			set
			{
				if ((this._RESETPASSWORD != value))
				{
					this.OnRESETPASSWORDChanging(value);
					this.SendPropertyChanging();
					this._RESETPASSWORD = value;
					this.SendPropertyChanged("RESETPASSWORD");
					this.OnRESETPASSWORDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="USER_DEVICE", Storage="_DEVICEs", ThisKey="USERID", OtherKey="USERID")]
		public EntitySet<DEVICE> DEVICEs
		{
			get
			{
				return this._DEVICEs;
			}
			set
			{
				this._DEVICEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="USER_OUTLET", Storage="_OUTLETs", ThisKey="USERID", OtherKey="USERID")]
		public EntitySet<OUTLET> OUTLETs
		{
			get
			{
				return this._OUTLETs;
			}
			set
			{
				this._OUTLETs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ROLE_USER", Storage="_ROLE", ThisKey="ROLEID", OtherKey="ROLEID", IsForeignKey=true)]
		public ROLE ROLE
		{
			get
			{
				return this._ROLE.Entity;
			}
			set
			{
				ROLE previousValue = this._ROLE.Entity;
				if (((previousValue != value) 
							|| (this._ROLE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ROLE.Entity = null;
						previousValue.USERs.Remove(this);
					}
					this._ROLE.Entity = value;
					if ((value != null))
					{
						value.USERs.Add(this);
						this._ROLEID = value.ROLEID;
					}
					else
					{
						this._ROLEID = default(int);
					}
					this.SendPropertyChanged("ROLE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DEVICEs(DEVICE entity)
		{
			this.SendPropertyChanging();
			entity.USER = this;
		}
		
		private void detach_DEVICEs(DEVICE entity)
		{
			this.SendPropertyChanging();
			entity.USER = null;
		}
		
		private void attach_OUTLETs(OUTLET entity)
		{
			this.SendPropertyChanging();
			entity.USER = this;
		}
		
		private void detach_OUTLETs(OUTLET entity)
		{
			this.SendPropertyChanging();
			entity.USER = null;
		}
	}
	
	public partial class GETCLIENTResult
	{
		
		private long _CLIENTID;
		
		private string _CLIENTNAME;
		
		private string _ADDRESS;
		
		private int _CITYID;
		
		private string _CITYNAME;
		
		private int _COUNTRYID;
		
		private string _COUNTRYNAME;
		
		private long _USERID;
		
		private string _USERNAME;
		
		private bool _ACTIVATED;
		
		private System.DateTime _CREATEDDATE;
		
		public GETCLIENTResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CLIENTID", DbType="BigInt NOT NULL")]
		public long CLIENTID
		{
			get
			{
				return this._CLIENTID;
			}
			set
			{
				if ((this._CLIENTID != value))
				{
					this._CLIENTID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CLIENTNAME", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string CLIENTNAME
		{
			get
			{
				return this._CLIENTNAME;
			}
			set
			{
				if ((this._CLIENTNAME != value))
				{
					this._CLIENTNAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADDRESS", DbType="NVarChar(MAX)")]
		public string ADDRESS
		{
			get
			{
				return this._ADDRESS;
			}
			set
			{
				if ((this._ADDRESS != value))
				{
					this._ADDRESS = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CITYID", DbType="Int NOT NULL")]
		public int CITYID
		{
			get
			{
				return this._CITYID;
			}
			set
			{
				if ((this._CITYID != value))
				{
					this._CITYID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CITYNAME", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string CITYNAME
		{
			get
			{
				return this._CITYNAME;
			}
			set
			{
				if ((this._CITYNAME != value))
				{
					this._CITYNAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COUNTRYID", DbType="Int NOT NULL")]
		public int COUNTRYID
		{
			get
			{
				return this._COUNTRYID;
			}
			set
			{
				if ((this._COUNTRYID != value))
				{
					this._COUNTRYID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COUNTRYNAME", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string COUNTRYNAME
		{
			get
			{
				return this._COUNTRYNAME;
			}
			set
			{
				if ((this._COUNTRYNAME != value))
				{
					this._COUNTRYNAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USERID", DbType="BigInt NOT NULL")]
		public long USERID
		{
			get
			{
				return this._USERID;
			}
			set
			{
				if ((this._USERID != value))
				{
					this._USERID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USERNAME", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string USERNAME
		{
			get
			{
				return this._USERNAME;
			}
			set
			{
				if ((this._USERNAME != value))
				{
					this._USERNAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACTIVATED", DbType="Bit NOT NULL")]
		public bool ACTIVATED
		{
			get
			{
				return this._ACTIVATED;
			}
			set
			{
				if ((this._ACTIVATED != value))
				{
					this._ACTIVATED = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATEDDATE", DbType="DateTime NOT NULL")]
		public System.DateTime CREATEDDATE
		{
			get
			{
				return this._CREATEDDATE;
			}
			set
			{
				if ((this._CREATEDDATE != value))
				{
					this._CREATEDDATE = value;
				}
			}
		}
	}
	
	public partial class GETDEVICEINVENTORYCOUNTResult
	{
		
		private string _STATUSNAME;
		
		private int _DEVICECOUNT;
		
		private System.Nullable<int> _DISPLAYORDER;
		
		public GETDEVICEINVENTORYCOUNTResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATUSNAME", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string STATUSNAME
		{
			get
			{
				return this._STATUSNAME;
			}
			set
			{
				if ((this._STATUSNAME != value))
				{
					this._STATUSNAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DEVICECOUNT", DbType="Int NOT NULL")]
		public int DEVICECOUNT
		{
			get
			{
				return this._DEVICECOUNT;
			}
			set
			{
				if ((this._DEVICECOUNT != value))
				{
					this._DEVICECOUNT = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DISPLAYORDER", DbType="Int")]
		public System.Nullable<int> DISPLAYORDER
		{
			get
			{
				return this._DISPLAYORDER;
			}
			set
			{
				if ((this._DISPLAYORDER != value))
				{
					this._DISPLAYORDER = value;
				}
			}
		}
	}
	
	public partial class GETOUTLETResult
	{
		
		private long _CLIENTID;
		
		private string _CLIENTNAME;
		
		private int _CLIENTCITYID;
		
		private string _CLIENTCITY;
		
		private int _CLIENTCOUNTRYID;
		
		private string _CLIENTCOUNTRY;
		
		private string _CLIENTADDRESS;
		
		private long _OUTLETID;
		
		private string _OUTLETNAME;
		
		private string _OUTLETADDRESS;
		
		private int _OUTLETCITYID;
		
		private string _OUTLETCITY;
		
		private int _OUTLETCOUNTRYID;
		
		private string _OUTLETCOUNTRY;
		
		private long _USERID;
		
		private string _USERNAME;
		
		private System.DateTime _CREATEDDATE;
		
		private bool _ACTIVATED;
		
		public GETOUTLETResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CLIENTID", DbType="BigInt NOT NULL")]
		public long CLIENTID
		{
			get
			{
				return this._CLIENTID;
			}
			set
			{
				if ((this._CLIENTID != value))
				{
					this._CLIENTID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CLIENTNAME", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string CLIENTNAME
		{
			get
			{
				return this._CLIENTNAME;
			}
			set
			{
				if ((this._CLIENTNAME != value))
				{
					this._CLIENTNAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CLIENTCITYID", DbType="Int NOT NULL")]
		public int CLIENTCITYID
		{
			get
			{
				return this._CLIENTCITYID;
			}
			set
			{
				if ((this._CLIENTCITYID != value))
				{
					this._CLIENTCITYID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CLIENTCITY", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string CLIENTCITY
		{
			get
			{
				return this._CLIENTCITY;
			}
			set
			{
				if ((this._CLIENTCITY != value))
				{
					this._CLIENTCITY = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CLIENTCOUNTRYID", DbType="Int NOT NULL")]
		public int CLIENTCOUNTRYID
		{
			get
			{
				return this._CLIENTCOUNTRYID;
			}
			set
			{
				if ((this._CLIENTCOUNTRYID != value))
				{
					this._CLIENTCOUNTRYID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CLIENTCOUNTRY", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string CLIENTCOUNTRY
		{
			get
			{
				return this._CLIENTCOUNTRY;
			}
			set
			{
				if ((this._CLIENTCOUNTRY != value))
				{
					this._CLIENTCOUNTRY = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CLIENTADDRESS", DbType="NVarChar(MAX)")]
		public string CLIENTADDRESS
		{
			get
			{
				return this._CLIENTADDRESS;
			}
			set
			{
				if ((this._CLIENTADDRESS != value))
				{
					this._CLIENTADDRESS = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OUTLETID", DbType="BigInt NOT NULL")]
		public long OUTLETID
		{
			get
			{
				return this._OUTLETID;
			}
			set
			{
				if ((this._OUTLETID != value))
				{
					this._OUTLETID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OUTLETNAME", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string OUTLETNAME
		{
			get
			{
				return this._OUTLETNAME;
			}
			set
			{
				if ((this._OUTLETNAME != value))
				{
					this._OUTLETNAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OUTLETADDRESS", DbType="NVarChar(MAX)")]
		public string OUTLETADDRESS
		{
			get
			{
				return this._OUTLETADDRESS;
			}
			set
			{
				if ((this._OUTLETADDRESS != value))
				{
					this._OUTLETADDRESS = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OUTLETCITYID", DbType="Int NOT NULL")]
		public int OUTLETCITYID
		{
			get
			{
				return this._OUTLETCITYID;
			}
			set
			{
				if ((this._OUTLETCITYID != value))
				{
					this._OUTLETCITYID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OUTLETCITY", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string OUTLETCITY
		{
			get
			{
				return this._OUTLETCITY;
			}
			set
			{
				if ((this._OUTLETCITY != value))
				{
					this._OUTLETCITY = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OUTLETCOUNTRYID", DbType="Int NOT NULL")]
		public int OUTLETCOUNTRYID
		{
			get
			{
				return this._OUTLETCOUNTRYID;
			}
			set
			{
				if ((this._OUTLETCOUNTRYID != value))
				{
					this._OUTLETCOUNTRYID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OUTLETCOUNTRY", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string OUTLETCOUNTRY
		{
			get
			{
				return this._OUTLETCOUNTRY;
			}
			set
			{
				if ((this._OUTLETCOUNTRY != value))
				{
					this._OUTLETCOUNTRY = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USERID", DbType="BigInt NOT NULL")]
		public long USERID
		{
			get
			{
				return this._USERID;
			}
			set
			{
				if ((this._USERID != value))
				{
					this._USERID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USERNAME", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string USERNAME
		{
			get
			{
				return this._USERNAME;
			}
			set
			{
				if ((this._USERNAME != value))
				{
					this._USERNAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATEDDATE", DbType="DateTime NOT NULL")]
		public System.DateTime CREATEDDATE
		{
			get
			{
				return this._CREATEDDATE;
			}
			set
			{
				if ((this._CREATEDDATE != value))
				{
					this._CREATEDDATE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACTIVATED", DbType="Bit NOT NULL")]
		public bool ACTIVATED
		{
			get
			{
				return this._ACTIVATED;
			}
			set
			{
				if ((this._ACTIVATED != value))
				{
					this._ACTIVATED = value;
				}
			}
		}
	}
	
	public partial class REMOVEBLOCKSTATUSResult
	{
		
		private int _RESULT;
		
		public REMOVEBLOCKSTATUSResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RESULT", DbType="Int NOT NULL")]
		public int RESULT
		{
			get
			{
				return this._RESULT;
			}
			set
			{
				if ((this._RESULT != value))
				{
					this._RESULT = value;
				}
			}
		}
	}
	
	public partial class GETDEVICETRANSACTIONResult
	{
		
		private long _SERIALNO;
		
		private long _DEVICEID;
		
		private string _DEVICEDETAILS;
		
		private string _PRODUCTSERIAL;
		
		private string _DEVICETAG;
		
		private string _COMPANYOWNER;
		
		private System.Nullable<long> _CLIENTID;
		
		private string _CLIENTNAME;
		
		private string _CLIENTADDRESS;
		
		private string _CLIENTCITY;
		
		private string _DEVICETYPE;
		
		private string _CLIENTCOUNTRY;
		
		private System.Nullable<long> _OUTLETID;
		
		private string _OUTLETNAME;
		
		private string _OUTLETADDRESS;
		
		private System.Nullable<int> _CITYID;
		
		private System.Nullable<bool> _CURRENTSTATUS;
		
		private string _CITYNAME;
		
		private int _COUNTRYID;
		
		private string _COUNTRYNAME;
		
		private System.Nullable<System.DateTime> _DELIVERYDATE;
		
		private string _DC;
		
		private System.Nullable<System.DateTime> _DCDATE;
		
		private string _DCFILE;
		
		private string _RDC;
		
		private System.Nullable<System.DateTime> _RDCDATE;
		
		private string _HIC;
		
		private System.Nullable<System.DateTime> _HICDATE;
		
		private bool _INSURED;
		
		private string _INSURANCECLAIM;
		
		private string _DAMAGEDOLDDEVICE;
		
		private System.Nullable<System.DateTime> _TRANSFEROWNERSHIPDATE;
		
		private string _REMARKS;
		
		private long _USERID;
		
		private string _USERNAME;
		
		private int _STATUSID;
		
		private string _STATUSNAME;
		
		private System.DateTime _CREATEDDATE;
		
		public GETDEVICETRANSACTIONResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SERIALNO", DbType="BigInt NOT NULL")]
		public long SERIALNO
		{
			get
			{
				return this._SERIALNO;
			}
			set
			{
				if ((this._SERIALNO != value))
				{
					this._SERIALNO = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DEVICEID", DbType="BigInt NOT NULL")]
		public long DEVICEID
		{
			get
			{
				return this._DEVICEID;
			}
			set
			{
				if ((this._DEVICEID != value))
				{
					this._DEVICEID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DEVICEDETAILS", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string DEVICEDETAILS
		{
			get
			{
				return this._DEVICEDETAILS;
			}
			set
			{
				if ((this._DEVICEDETAILS != value))
				{
					this._DEVICEDETAILS = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRODUCTSERIAL", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
		public string PRODUCTSERIAL
		{
			get
			{
				return this._PRODUCTSERIAL;
			}
			set
			{
				if ((this._PRODUCTSERIAL != value))
				{
					this._PRODUCTSERIAL = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DEVICETAG", DbType="NVarChar(25)")]
		public string DEVICETAG
		{
			get
			{
				return this._DEVICETAG;
			}
			set
			{
				if ((this._DEVICETAG != value))
				{
					this._DEVICETAG = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COMPANYOWNER", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string COMPANYOWNER
		{
			get
			{
				return this._COMPANYOWNER;
			}
			set
			{
				if ((this._COMPANYOWNER != value))
				{
					this._COMPANYOWNER = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CLIENTID", DbType="BigInt")]
		public System.Nullable<long> CLIENTID
		{
			get
			{
				return this._CLIENTID;
			}
			set
			{
				if ((this._CLIENTID != value))
				{
					this._CLIENTID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CLIENTNAME", DbType="NVarChar(250)")]
		public string CLIENTNAME
		{
			get
			{
				return this._CLIENTNAME;
			}
			set
			{
				if ((this._CLIENTNAME != value))
				{
					this._CLIENTNAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CLIENTADDRESS", DbType="NVarChar(MAX)")]
		public string CLIENTADDRESS
		{
			get
			{
				return this._CLIENTADDRESS;
			}
			set
			{
				if ((this._CLIENTADDRESS != value))
				{
					this._CLIENTADDRESS = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CLIENTCITY", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string CLIENTCITY
		{
			get
			{
				return this._CLIENTCITY;
			}
			set
			{
				if ((this._CLIENTCITY != value))
				{
					this._CLIENTCITY = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DEVICETYPE", DbType="NVarChar(250)")]
		public string DEVICETYPE
		{
			get
			{
				return this._DEVICETYPE;
			}
			set
			{
				if ((this._DEVICETYPE != value))
				{
					this._DEVICETYPE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CLIENTCOUNTRY", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string CLIENTCOUNTRY
		{
			get
			{
				return this._CLIENTCOUNTRY;
			}
			set
			{
				if ((this._CLIENTCOUNTRY != value))
				{
					this._CLIENTCOUNTRY = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OUTLETID", DbType="BigInt")]
		public System.Nullable<long> OUTLETID
		{
			get
			{
				return this._OUTLETID;
			}
			set
			{
				if ((this._OUTLETID != value))
				{
					this._OUTLETID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OUTLETNAME", DbType="NVarChar(250)")]
		public string OUTLETNAME
		{
			get
			{
				return this._OUTLETNAME;
			}
			set
			{
				if ((this._OUTLETNAME != value))
				{
					this._OUTLETNAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OUTLETADDRESS", DbType="NVarChar(MAX)")]
		public string OUTLETADDRESS
		{
			get
			{
				return this._OUTLETADDRESS;
			}
			set
			{
				if ((this._OUTLETADDRESS != value))
				{
					this._OUTLETADDRESS = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CITYID", DbType="Int")]
		public System.Nullable<int> CITYID
		{
			get
			{
				return this._CITYID;
			}
			set
			{
				if ((this._CITYID != value))
				{
					this._CITYID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CURRENTSTATUS", DbType="Bit")]
		public System.Nullable<bool> CURRENTSTATUS
		{
			get
			{
				return this._CURRENTSTATUS;
			}
			set
			{
				if ((this._CURRENTSTATUS != value))
				{
					this._CURRENTSTATUS = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CITYNAME", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string CITYNAME
		{
			get
			{
				return this._CITYNAME;
			}
			set
			{
				if ((this._CITYNAME != value))
				{
					this._CITYNAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COUNTRYID", DbType="Int NOT NULL")]
		public int COUNTRYID
		{
			get
			{
				return this._COUNTRYID;
			}
			set
			{
				if ((this._COUNTRYID != value))
				{
					this._COUNTRYID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COUNTRYNAME", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string COUNTRYNAME
		{
			get
			{
				return this._COUNTRYNAME;
			}
			set
			{
				if ((this._COUNTRYNAME != value))
				{
					this._COUNTRYNAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DELIVERYDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> DELIVERYDATE
		{
			get
			{
				return this._DELIVERYDATE;
			}
			set
			{
				if ((this._DELIVERYDATE != value))
				{
					this._DELIVERYDATE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DC", DbType="NVarChar(20)")]
		public string DC
		{
			get
			{
				return this._DC;
			}
			set
			{
				if ((this._DC != value))
				{
					this._DC = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DCDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> DCDATE
		{
			get
			{
				return this._DCDATE;
			}
			set
			{
				if ((this._DCDATE != value))
				{
					this._DCDATE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DCFILE", DbType="NVarChar(MAX)")]
		public string DCFILE
		{
			get
			{
				return this._DCFILE;
			}
			set
			{
				if ((this._DCFILE != value))
				{
					this._DCFILE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RDC", DbType="NVarChar(20)")]
		public string RDC
		{
			get
			{
				return this._RDC;
			}
			set
			{
				if ((this._RDC != value))
				{
					this._RDC = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RDCDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> RDCDATE
		{
			get
			{
				return this._RDCDATE;
			}
			set
			{
				if ((this._RDCDATE != value))
				{
					this._RDCDATE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HIC", DbType="NVarChar(20)")]
		public string HIC
		{
			get
			{
				return this._HIC;
			}
			set
			{
				if ((this._HIC != value))
				{
					this._HIC = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HICDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> HICDATE
		{
			get
			{
				return this._HICDATE;
			}
			set
			{
				if ((this._HICDATE != value))
				{
					this._HICDATE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INSURED", DbType="Bit NOT NULL")]
		public bool INSURED
		{
			get
			{
				return this._INSURED;
			}
			set
			{
				if ((this._INSURED != value))
				{
					this._INSURED = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INSURANCECLAIM", DbType="NVarChar(25)")]
		public string INSURANCECLAIM
		{
			get
			{
				return this._INSURANCECLAIM;
			}
			set
			{
				if ((this._INSURANCECLAIM != value))
				{
					this._INSURANCECLAIM = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DAMAGEDOLDDEVICE", DbType="NVarChar(255)")]
		public string DAMAGEDOLDDEVICE
		{
			get
			{
				return this._DAMAGEDOLDDEVICE;
			}
			set
			{
				if ((this._DAMAGEDOLDDEVICE != value))
				{
					this._DAMAGEDOLDDEVICE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRANSFEROWNERSHIPDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> TRANSFEROWNERSHIPDATE
		{
			get
			{
				return this._TRANSFEROWNERSHIPDATE;
			}
			set
			{
				if ((this._TRANSFEROWNERSHIPDATE != value))
				{
					this._TRANSFEROWNERSHIPDATE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REMARKS", DbType="NVarChar(MAX)")]
		public string REMARKS
		{
			get
			{
				return this._REMARKS;
			}
			set
			{
				if ((this._REMARKS != value))
				{
					this._REMARKS = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USERID", DbType="BigInt NOT NULL")]
		public long USERID
		{
			get
			{
				return this._USERID;
			}
			set
			{
				if ((this._USERID != value))
				{
					this._USERID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USERNAME", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string USERNAME
		{
			get
			{
				return this._USERNAME;
			}
			set
			{
				if ((this._USERNAME != value))
				{
					this._USERNAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATUSID", DbType="Int NOT NULL")]
		public int STATUSID
		{
			get
			{
				return this._STATUSID;
			}
			set
			{
				if ((this._STATUSID != value))
				{
					this._STATUSID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATUSNAME", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string STATUSNAME
		{
			get
			{
				return this._STATUSNAME;
			}
			set
			{
				if ((this._STATUSNAME != value))
				{
					this._STATUSNAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATEDDATE", DbType="DateTime NOT NULL")]
		public System.DateTime CREATEDDATE
		{
			get
			{
				return this._CREATEDDATE;
			}
			set
			{
				if ((this._CREATEDDATE != value))
				{
					this._CREATEDDATE = value;
				}
			}
		}
	}
	
	public partial class GETDEVICETRANSACTIONHISTORYResult
	{
		
		private long _SERIALNO;
		
		private long _DEVICEID;
		
		private string _DEVICEDETAILS;
		
		private string _PRODUCTSERIAL;
		
		private string _DEVICETAG;
		
		private string _COMPANYOWNER;
		
		private System.Nullable<long> _CLIENTID;
		
		private string _CLIENTNAME;
		
		private string _CLIENTADDRESS;
		
		private string _CLIENTCITY;
		
		private string _DEVICETYPE;
		
		private string _CLIENTCOUNTRY;
		
		private System.Nullable<long> _OUTLETID;
		
		private string _OUTLETNAME;
		
		private string _OUTLETADDRESS;
		
		private System.Nullable<int> _CITYID;
		
		private System.Nullable<bool> _CURRENTSTATUS;
		
		private string _CITYNAME;
		
		private int _COUNTRYID;
		
		private string _COUNTRYNAME;
		
		private System.Nullable<System.DateTime> _DELIVERYDATE;
		
		private string _DC;
		
		private System.Nullable<System.DateTime> _DCDATE;
		
		private string _DCFILE;
		
		private string _RDC;
		
		private System.Nullable<System.DateTime> _RDCDATE;
		
		private string _HIC;
		
		private System.Nullable<System.DateTime> _HICDATE;
		
		private bool _INSURED;
		
		private string _INSURANCECLAIM;
		
		private string _DAMAGEDOLDDEVICE;
		
		private System.Nullable<System.DateTime> _TRANSFEROWNERSHIPDATE;
		
		private string _REMARKS;
		
		private long _USERID;
		
		private string _USERNAME;
		
		private int _STATUSID;
		
		private string _STATUSNAME;
		
		private System.DateTime _CREATEDDATE;
		
		public GETDEVICETRANSACTIONHISTORYResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SERIALNO", DbType="BigInt NOT NULL")]
		public long SERIALNO
		{
			get
			{
				return this._SERIALNO;
			}
			set
			{
				if ((this._SERIALNO != value))
				{
					this._SERIALNO = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DEVICEID", DbType="BigInt NOT NULL")]
		public long DEVICEID
		{
			get
			{
				return this._DEVICEID;
			}
			set
			{
				if ((this._DEVICEID != value))
				{
					this._DEVICEID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DEVICEDETAILS", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string DEVICEDETAILS
		{
			get
			{
				return this._DEVICEDETAILS;
			}
			set
			{
				if ((this._DEVICEDETAILS != value))
				{
					this._DEVICEDETAILS = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRODUCTSERIAL", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
		public string PRODUCTSERIAL
		{
			get
			{
				return this._PRODUCTSERIAL;
			}
			set
			{
				if ((this._PRODUCTSERIAL != value))
				{
					this._PRODUCTSERIAL = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DEVICETAG", DbType="NVarChar(25)")]
		public string DEVICETAG
		{
			get
			{
				return this._DEVICETAG;
			}
			set
			{
				if ((this._DEVICETAG != value))
				{
					this._DEVICETAG = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COMPANYOWNER", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string COMPANYOWNER
		{
			get
			{
				return this._COMPANYOWNER;
			}
			set
			{
				if ((this._COMPANYOWNER != value))
				{
					this._COMPANYOWNER = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CLIENTID", DbType="BigInt")]
		public System.Nullable<long> CLIENTID
		{
			get
			{
				return this._CLIENTID;
			}
			set
			{
				if ((this._CLIENTID != value))
				{
					this._CLIENTID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CLIENTNAME", DbType="NVarChar(250)")]
		public string CLIENTNAME
		{
			get
			{
				return this._CLIENTNAME;
			}
			set
			{
				if ((this._CLIENTNAME != value))
				{
					this._CLIENTNAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CLIENTADDRESS", DbType="NVarChar(MAX)")]
		public string CLIENTADDRESS
		{
			get
			{
				return this._CLIENTADDRESS;
			}
			set
			{
				if ((this._CLIENTADDRESS != value))
				{
					this._CLIENTADDRESS = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CLIENTCITY", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string CLIENTCITY
		{
			get
			{
				return this._CLIENTCITY;
			}
			set
			{
				if ((this._CLIENTCITY != value))
				{
					this._CLIENTCITY = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DEVICETYPE", DbType="NVarChar(250)")]
		public string DEVICETYPE
		{
			get
			{
				return this._DEVICETYPE;
			}
			set
			{
				if ((this._DEVICETYPE != value))
				{
					this._DEVICETYPE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CLIENTCOUNTRY", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string CLIENTCOUNTRY
		{
			get
			{
				return this._CLIENTCOUNTRY;
			}
			set
			{
				if ((this._CLIENTCOUNTRY != value))
				{
					this._CLIENTCOUNTRY = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OUTLETID", DbType="BigInt")]
		public System.Nullable<long> OUTLETID
		{
			get
			{
				return this._OUTLETID;
			}
			set
			{
				if ((this._OUTLETID != value))
				{
					this._OUTLETID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OUTLETNAME", DbType="NVarChar(250)")]
		public string OUTLETNAME
		{
			get
			{
				return this._OUTLETNAME;
			}
			set
			{
				if ((this._OUTLETNAME != value))
				{
					this._OUTLETNAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OUTLETADDRESS", DbType="NVarChar(MAX)")]
		public string OUTLETADDRESS
		{
			get
			{
				return this._OUTLETADDRESS;
			}
			set
			{
				if ((this._OUTLETADDRESS != value))
				{
					this._OUTLETADDRESS = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CITYID", DbType="Int")]
		public System.Nullable<int> CITYID
		{
			get
			{
				return this._CITYID;
			}
			set
			{
				if ((this._CITYID != value))
				{
					this._CITYID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CURRENTSTATUS", DbType="Bit")]
		public System.Nullable<bool> CURRENTSTATUS
		{
			get
			{
				return this._CURRENTSTATUS;
			}
			set
			{
				if ((this._CURRENTSTATUS != value))
				{
					this._CURRENTSTATUS = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CITYNAME", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string CITYNAME
		{
			get
			{
				return this._CITYNAME;
			}
			set
			{
				if ((this._CITYNAME != value))
				{
					this._CITYNAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COUNTRYID", DbType="Int NOT NULL")]
		public int COUNTRYID
		{
			get
			{
				return this._COUNTRYID;
			}
			set
			{
				if ((this._COUNTRYID != value))
				{
					this._COUNTRYID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COUNTRYNAME", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string COUNTRYNAME
		{
			get
			{
				return this._COUNTRYNAME;
			}
			set
			{
				if ((this._COUNTRYNAME != value))
				{
					this._COUNTRYNAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DELIVERYDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> DELIVERYDATE
		{
			get
			{
				return this._DELIVERYDATE;
			}
			set
			{
				if ((this._DELIVERYDATE != value))
				{
					this._DELIVERYDATE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DC", DbType="NVarChar(20)")]
		public string DC
		{
			get
			{
				return this._DC;
			}
			set
			{
				if ((this._DC != value))
				{
					this._DC = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DCDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> DCDATE
		{
			get
			{
				return this._DCDATE;
			}
			set
			{
				if ((this._DCDATE != value))
				{
					this._DCDATE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DCFILE", DbType="NVarChar(MAX)")]
		public string DCFILE
		{
			get
			{
				return this._DCFILE;
			}
			set
			{
				if ((this._DCFILE != value))
				{
					this._DCFILE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RDC", DbType="NVarChar(20)")]
		public string RDC
		{
			get
			{
				return this._RDC;
			}
			set
			{
				if ((this._RDC != value))
				{
					this._RDC = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RDCDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> RDCDATE
		{
			get
			{
				return this._RDCDATE;
			}
			set
			{
				if ((this._RDCDATE != value))
				{
					this._RDCDATE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HIC", DbType="NVarChar(20)")]
		public string HIC
		{
			get
			{
				return this._HIC;
			}
			set
			{
				if ((this._HIC != value))
				{
					this._HIC = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HICDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> HICDATE
		{
			get
			{
				return this._HICDATE;
			}
			set
			{
				if ((this._HICDATE != value))
				{
					this._HICDATE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INSURED", DbType="Bit NOT NULL")]
		public bool INSURED
		{
			get
			{
				return this._INSURED;
			}
			set
			{
				if ((this._INSURED != value))
				{
					this._INSURED = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INSURANCECLAIM", DbType="NVarChar(25)")]
		public string INSURANCECLAIM
		{
			get
			{
				return this._INSURANCECLAIM;
			}
			set
			{
				if ((this._INSURANCECLAIM != value))
				{
					this._INSURANCECLAIM = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DAMAGEDOLDDEVICE", DbType="NVarChar(255)")]
		public string DAMAGEDOLDDEVICE
		{
			get
			{
				return this._DAMAGEDOLDDEVICE;
			}
			set
			{
				if ((this._DAMAGEDOLDDEVICE != value))
				{
					this._DAMAGEDOLDDEVICE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRANSFEROWNERSHIPDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> TRANSFEROWNERSHIPDATE
		{
			get
			{
				return this._TRANSFEROWNERSHIPDATE;
			}
			set
			{
				if ((this._TRANSFEROWNERSHIPDATE != value))
				{
					this._TRANSFEROWNERSHIPDATE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REMARKS", DbType="NVarChar(MAX)")]
		public string REMARKS
		{
			get
			{
				return this._REMARKS;
			}
			set
			{
				if ((this._REMARKS != value))
				{
					this._REMARKS = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USERID", DbType="BigInt NOT NULL")]
		public long USERID
		{
			get
			{
				return this._USERID;
			}
			set
			{
				if ((this._USERID != value))
				{
					this._USERID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USERNAME", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string USERNAME
		{
			get
			{
				return this._USERNAME;
			}
			set
			{
				if ((this._USERNAME != value))
				{
					this._USERNAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATUSID", DbType="Int NOT NULL")]
		public int STATUSID
		{
			get
			{
				return this._STATUSID;
			}
			set
			{
				if ((this._STATUSID != value))
				{
					this._STATUSID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATUSNAME", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string STATUSNAME
		{
			get
			{
				return this._STATUSNAME;
			}
			set
			{
				if ((this._STATUSNAME != value))
				{
					this._STATUSNAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATEDDATE", DbType="DateTime NOT NULL")]
		public System.DateTime CREATEDDATE
		{
			get
			{
				return this._CREATEDDATE;
			}
			set
			{
				if ((this._CREATEDDATE != value))
				{
					this._CREATEDDATE = value;
				}
			}
		}
	}
	
	public partial class GETDEVICEResult
	{
		
		private long _DEVICEID;
		
		private string _PRODUCTSERIAL;
		
		private string _DEVICEDETAILS;
		
		private int _STATUSID;
		
		private string _COMPANYOWNER;
		
		private string _NOTE;
		
		private long _USERID;
		
		private System.DateTime _CREATEDDATE;
		
		private System.Nullable<System.DateTime> _BLOCKEDDATE;
		
		private string _STATUSNAME;
		
		private string _USERNAME;
		
		private string _DEVICETAG;
		
		private string _DEVICETYPE;
		
		private System.Nullable<long> _SERIALNO;
		
		private System.Nullable<bool> _CURRENTSTATUS;
		
		public GETDEVICEResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DEVICEID", DbType="BigInt NOT NULL")]
		public long DEVICEID
		{
			get
			{
				return this._DEVICEID;
			}
			set
			{
				if ((this._DEVICEID != value))
				{
					this._DEVICEID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRODUCTSERIAL", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
		public string PRODUCTSERIAL
		{
			get
			{
				return this._PRODUCTSERIAL;
			}
			set
			{
				if ((this._PRODUCTSERIAL != value))
				{
					this._PRODUCTSERIAL = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DEVICEDETAILS", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string DEVICEDETAILS
		{
			get
			{
				return this._DEVICEDETAILS;
			}
			set
			{
				if ((this._DEVICEDETAILS != value))
				{
					this._DEVICEDETAILS = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATUSID", DbType="Int NOT NULL")]
		public int STATUSID
		{
			get
			{
				return this._STATUSID;
			}
			set
			{
				if ((this._STATUSID != value))
				{
					this._STATUSID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COMPANYOWNER", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string COMPANYOWNER
		{
			get
			{
				return this._COMPANYOWNER;
			}
			set
			{
				if ((this._COMPANYOWNER != value))
				{
					this._COMPANYOWNER = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOTE", DbType="NVarChar(MAX)")]
		public string NOTE
		{
			get
			{
				return this._NOTE;
			}
			set
			{
				if ((this._NOTE != value))
				{
					this._NOTE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USERID", DbType="BigInt NOT NULL")]
		public long USERID
		{
			get
			{
				return this._USERID;
			}
			set
			{
				if ((this._USERID != value))
				{
					this._USERID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATEDDATE", DbType="DateTime NOT NULL")]
		public System.DateTime CREATEDDATE
		{
			get
			{
				return this._CREATEDDATE;
			}
			set
			{
				if ((this._CREATEDDATE != value))
				{
					this._CREATEDDATE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BLOCKEDDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> BLOCKEDDATE
		{
			get
			{
				return this._BLOCKEDDATE;
			}
			set
			{
				if ((this._BLOCKEDDATE != value))
				{
					this._BLOCKEDDATE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATUSNAME", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string STATUSNAME
		{
			get
			{
				return this._STATUSNAME;
			}
			set
			{
				if ((this._STATUSNAME != value))
				{
					this._STATUSNAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USERNAME", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string USERNAME
		{
			get
			{
				return this._USERNAME;
			}
			set
			{
				if ((this._USERNAME != value))
				{
					this._USERNAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DEVICETAG", DbType="NVarChar(25)")]
		public string DEVICETAG
		{
			get
			{
				return this._DEVICETAG;
			}
			set
			{
				if ((this._DEVICETAG != value))
				{
					this._DEVICETAG = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DEVICETYPE", DbType="NVarChar(250)")]
		public string DEVICETYPE
		{
			get
			{
				return this._DEVICETYPE;
			}
			set
			{
				if ((this._DEVICETYPE != value))
				{
					this._DEVICETYPE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SERIALNO", DbType="BigInt")]
		public System.Nullable<long> SERIALNO
		{
			get
			{
				return this._SERIALNO;
			}
			set
			{
				if ((this._SERIALNO != value))
				{
					this._SERIALNO = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CURRENTSTATUS", DbType="Bit")]
		public System.Nullable<bool> CURRENTSTATUS
		{
			get
			{
				return this._CURRENTSTATUS;
			}
			set
			{
				if ((this._CURRENTSTATUS != value))
				{
					this._CURRENTSTATUS = value;
				}
			}
		}
	}
	
	public partial class GETSTATUSDEVICELISTResult
	{
		
		private long _DEVICEID;
		
		private string _PRODUCTSERIAL;
		
		private string _DEVICEDETAILS;
		
		private int _STATUSID;
		
		private string _COMPANYOWNER;
		
		private string _DEVICETAG;
		
		private string _DEVICETYPE;
		
		private string _STATUSNAME;
		
		private System.Nullable<long> _OUTLETID;
		
		private string _OUTLETNAME;
		
		private int _CITYID;
		
		private string _CITYNAME;
		
		private string _CLIENTNAME;
		
		private string _DC;
		
		private System.Nullable<System.DateTime> _DCDATE;
		
		private string _DCFILE;
		
		private System.Nullable<System.DateTime> _DELIVERYDATE;
		
		private string _HIC;
		
		private System.Nullable<System.DateTime> _HICDATE;
		
		private string _RDC;
		
		private System.Nullable<System.DateTime> _RDCDATE;
		
		private string _INSURANCECLAIM;
		
		private string _REMARKS;
		
		private bool _INSURED;
		
		private string _DAMAGEDOLDDEVICE;
		
		private System.Nullable<System.DateTime> _TRANSFEROWNERSHIPDATE;
		
		private long _USERID;
		
		private string _USERNAME;
		
		private System.DateTime _CREATEDDATE;
		
		private long _SERIALNO;
		
		private System.Nullable<bool> _CURRENTSTATUS;
		
		public GETSTATUSDEVICELISTResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DEVICEID", DbType="BigInt NOT NULL")]
		public long DEVICEID
		{
			get
			{
				return this._DEVICEID;
			}
			set
			{
				if ((this._DEVICEID != value))
				{
					this._DEVICEID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRODUCTSERIAL", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
		public string PRODUCTSERIAL
		{
			get
			{
				return this._PRODUCTSERIAL;
			}
			set
			{
				if ((this._PRODUCTSERIAL != value))
				{
					this._PRODUCTSERIAL = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DEVICEDETAILS", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string DEVICEDETAILS
		{
			get
			{
				return this._DEVICEDETAILS;
			}
			set
			{
				if ((this._DEVICEDETAILS != value))
				{
					this._DEVICEDETAILS = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATUSID", DbType="Int NOT NULL")]
		public int STATUSID
		{
			get
			{
				return this._STATUSID;
			}
			set
			{
				if ((this._STATUSID != value))
				{
					this._STATUSID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COMPANYOWNER", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string COMPANYOWNER
		{
			get
			{
				return this._COMPANYOWNER;
			}
			set
			{
				if ((this._COMPANYOWNER != value))
				{
					this._COMPANYOWNER = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DEVICETAG", DbType="NVarChar(25)")]
		public string DEVICETAG
		{
			get
			{
				return this._DEVICETAG;
			}
			set
			{
				if ((this._DEVICETAG != value))
				{
					this._DEVICETAG = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DEVICETYPE", DbType="NVarChar(250)")]
		public string DEVICETYPE
		{
			get
			{
				return this._DEVICETYPE;
			}
			set
			{
				if ((this._DEVICETYPE != value))
				{
					this._DEVICETYPE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATUSNAME", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string STATUSNAME
		{
			get
			{
				return this._STATUSNAME;
			}
			set
			{
				if ((this._STATUSNAME != value))
				{
					this._STATUSNAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OUTLETID", DbType="BigInt")]
		public System.Nullable<long> OUTLETID
		{
			get
			{
				return this._OUTLETID;
			}
			set
			{
				if ((this._OUTLETID != value))
				{
					this._OUTLETID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OUTLETNAME", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string OUTLETNAME
		{
			get
			{
				return this._OUTLETNAME;
			}
			set
			{
				if ((this._OUTLETNAME != value))
				{
					this._OUTLETNAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CITYID", DbType="Int NOT NULL")]
		public int CITYID
		{
			get
			{
				return this._CITYID;
			}
			set
			{
				if ((this._CITYID != value))
				{
					this._CITYID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CITYNAME", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string CITYNAME
		{
			get
			{
				return this._CITYNAME;
			}
			set
			{
				if ((this._CITYNAME != value))
				{
					this._CITYNAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CLIENTNAME", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string CLIENTNAME
		{
			get
			{
				return this._CLIENTNAME;
			}
			set
			{
				if ((this._CLIENTNAME != value))
				{
					this._CLIENTNAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DC", DbType="NVarChar(20)")]
		public string DC
		{
			get
			{
				return this._DC;
			}
			set
			{
				if ((this._DC != value))
				{
					this._DC = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DCDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> DCDATE
		{
			get
			{
				return this._DCDATE;
			}
			set
			{
				if ((this._DCDATE != value))
				{
					this._DCDATE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DCFILE", DbType="NVarChar(MAX)")]
		public string DCFILE
		{
			get
			{
				return this._DCFILE;
			}
			set
			{
				if ((this._DCFILE != value))
				{
					this._DCFILE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DELIVERYDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> DELIVERYDATE
		{
			get
			{
				return this._DELIVERYDATE;
			}
			set
			{
				if ((this._DELIVERYDATE != value))
				{
					this._DELIVERYDATE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HIC", DbType="NVarChar(20)")]
		public string HIC
		{
			get
			{
				return this._HIC;
			}
			set
			{
				if ((this._HIC != value))
				{
					this._HIC = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HICDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> HICDATE
		{
			get
			{
				return this._HICDATE;
			}
			set
			{
				if ((this._HICDATE != value))
				{
					this._HICDATE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RDC", DbType="NVarChar(20)")]
		public string RDC
		{
			get
			{
				return this._RDC;
			}
			set
			{
				if ((this._RDC != value))
				{
					this._RDC = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RDCDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> RDCDATE
		{
			get
			{
				return this._RDCDATE;
			}
			set
			{
				if ((this._RDCDATE != value))
				{
					this._RDCDATE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INSURANCECLAIM", DbType="NVarChar(25)")]
		public string INSURANCECLAIM
		{
			get
			{
				return this._INSURANCECLAIM;
			}
			set
			{
				if ((this._INSURANCECLAIM != value))
				{
					this._INSURANCECLAIM = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REMARKS", DbType="NVarChar(MAX)")]
		public string REMARKS
		{
			get
			{
				return this._REMARKS;
			}
			set
			{
				if ((this._REMARKS != value))
				{
					this._REMARKS = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INSURED", DbType="Bit NOT NULL")]
		public bool INSURED
		{
			get
			{
				return this._INSURED;
			}
			set
			{
				if ((this._INSURED != value))
				{
					this._INSURED = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DAMAGEDOLDDEVICE", DbType="NVarChar(255)")]
		public string DAMAGEDOLDDEVICE
		{
			get
			{
				return this._DAMAGEDOLDDEVICE;
			}
			set
			{
				if ((this._DAMAGEDOLDDEVICE != value))
				{
					this._DAMAGEDOLDDEVICE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRANSFEROWNERSHIPDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> TRANSFEROWNERSHIPDATE
		{
			get
			{
				return this._TRANSFEROWNERSHIPDATE;
			}
			set
			{
				if ((this._TRANSFEROWNERSHIPDATE != value))
				{
					this._TRANSFEROWNERSHIPDATE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USERID", DbType="BigInt NOT NULL")]
		public long USERID
		{
			get
			{
				return this._USERID;
			}
			set
			{
				if ((this._USERID != value))
				{
					this._USERID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USERNAME", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string USERNAME
		{
			get
			{
				return this._USERNAME;
			}
			set
			{
				if ((this._USERNAME != value))
				{
					this._USERNAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATEDDATE", DbType="DateTime NOT NULL")]
		public System.DateTime CREATEDDATE
		{
			get
			{
				return this._CREATEDDATE;
			}
			set
			{
				if ((this._CREATEDDATE != value))
				{
					this._CREATEDDATE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SERIALNO", DbType="BigInt NOT NULL")]
		public long SERIALNO
		{
			get
			{
				return this._SERIALNO;
			}
			set
			{
				if ((this._SERIALNO != value))
				{
					this._SERIALNO = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CURRENTSTATUS", DbType="Bit")]
		public System.Nullable<bool> CURRENTSTATUS
		{
			get
			{
				return this._CURRENTSTATUS;
			}
			set
			{
				if ((this._CURRENTSTATUS != value))
				{
					this._CURRENTSTATUS = value;
				}
			}
		}
	}
	
	public partial class DELETEDEVICEResult
	{
		
		private int _RESULT;
		
		public DELETEDEVICEResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RESULT", DbType="Int NOT NULL")]
		public int RESULT
		{
			get
			{
				return this._RESULT;
			}
			set
			{
				if ((this._RESULT != value))
				{
					this._RESULT = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
