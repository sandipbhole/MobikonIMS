@model Mobikon.IMS.Message.Device

@{
    ViewBag.Title = "Edit device";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit device</h2>

<script src="/Scripts/modernizr-2.8.3.js"></script>
<script src="/Scripts/jquery-2.1.4.js"></script>
<script src="/bundles/jquery-ui"></script>
<script src="/Scripts/jquery.unobtrusive-ajax.js"></script>
<script src="/Scripts/jquery.validate.js"></script>
<script src="/Scripts/jquery.validate.unobtrusive.js"></script>
<script src="~/Scripts/mobikonims.js"></script>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()    
    <div class="form-horizontal">
        @*<h4>Edit device</h4>*@
        <hr />
        @Html.ValidationSummary(true, "Device not updated successfully.", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.deviceID)
        <div class="form-group">
            @Html.Label(" ", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.Label("", (string)ViewBag.message, new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(device => device.deviceType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(device => device.deviceType, ViewBag.deviceType as IEnumerable<SelectListItem>,"Select device type", new { @class = "form-control", @autofocus = "autofocus" })
                @Html.ValidationMessageFor(device => device.productSerial, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(device => device.productSerial, new { @class = "control-label col-md-2" })
            <div class="col-md-10">              
                @Html.DropDownListFor(device => device.productSerial,ViewBag.productSerial as IEnumerable<SelectListItem>, "Select device serial",new { @class = "form-control"})
                @Html.ValidationMessageFor(model => model.productSerial, "", new { @class = "text-danger" })
             </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(device => device.deviceDetails, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(device => device.deviceDetails, new { @class = "form-control" , @maxLength = "250" })
                @Html.ValidationMessageFor(model => model.deviceDetails, "", new { @class = "text-danger" })
            </div>
        </div>
       
        <div class="form-group">
            @Html.LabelFor(device => device.companyOwner, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.CheckBoxFor(device => device.companyOwner, new { @class = "form-control",@checked="checked"})*@
                @Html.DropDownListFor(device => device.companyOwner, ViewBag.companyOwner as IEnumerable<SelectListItem>, new { @class = "form-control" })
                @Html.ValidationMessageFor(device => device.companyOwner, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(device => device.deviceTag, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(device => device.deviceTag, new { @class = "form-control", @maxlength = "25" })
                @Html.ValidationMessageFor(device => device.deviceTag, "", new { @class = "text-danger" })
            </div>
        </div>  
        <div class="form-group">
            @Html.LabelFor(device => device.status, new { @class = "control-label col-md-2" })
            <div class="col-md-10">             
                @Html.DropDownListFor(device => device.status, ViewBag.statusName as IEnumerable<SelectListItem>, "Select status", new { @class = "form-control", @disabled = "disabled" })
                @Html.ValidationMessageFor(device => device.status, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(device => device.note, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(device => device.note, new { @class = "form-control", @maxLength = "5000" })
                @Html.ValidationMessageFor(device => device.note, "", new { @class = "text-danger" })
            </div>
        </div>        

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" name="command" value="Save" class="btn btn-default" />
                @*<input type="submit" name="command" value="Cancel" class="btn btn-default" />
                <input type="submit" name="command" value="Close" class="btn btn-default" />*@
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Device")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
