@model Mobikon.IMS.Message.Outlet

@{
    ViewBag.Title = "Edit outlet";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h3>Edit outlet</h3>

<script src="/Scripts/modernizr-2.8.3.js"></script>
<script src="/Scripts/jquery-2.1.4.js"></script>
<script src="/bundles/jquery-ui"></script>
<script src="/Scripts/jquery.unobtrusive-ajax.js"></script>
<script src="/Scripts/jquery.validate.js"></script>
<script src="/Scripts/jquery.validate.unobtrusive.js"></script>
<script src="~/Scripts/outlet.js"></script>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        @*<h4>Edit device</h4>*@
        <hr />
        @Html.ValidationSummary(true, "Outlet not updated successfully.", new { @class = "text-danger" })
        @Html.HiddenFor(outlet => outlet.outletID)
        @*<div class="form-group">
            @Html.Label(" ", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.Label("", (string)ViewBag.message, new { @class = "text-danger" })
            </div>
        </div>*@
        <div class="form-group">
            @Html.LabelFor(outlet => outlet.outletName, new { @class = "control-label col-md-2" })
            <div class="col-md-10 ">
                @Html.DropDownListFor(outlet => outlet.outletName, ViewBag.outletName as IEnumerable<SelectListItem>, "Select outlet", new { @class = "form-control", @autofocus = "autofocus" })
                @Html.ValidationMessageFor(outlet => outlet.outletName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(outlet => outlet.address, new { @class = "control-label col-md-2" })
            <div class="col-md-10 ">
                @Html.TextAreaFor(outlet => outlet.address, new { @class = "form-control", @maxLength = "5000" })
                @Html.ValidationMessageFor(outlet => outlet.address, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(outlet => outlet.countryName, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(outlet => outlet.countryName, ViewBag.countryNameSearch as IEnumerable<SelectListItem>, "Select country", new { @class = "form-control" })
                @Html.ValidationMessageFor(outlet => outlet.countryName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(outlet => outlet.cityName, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(outlet => outlet.cityName, ViewBag.cityNameSearch as IEnumerable<SelectListItem>, "Select city", new { @class = "form-control" })
                @Html.ValidationMessageFor(outlet => outlet.cityName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(outlet => outlet.clientName, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(outlet => outlet.clientName, ViewBag.clientName as IEnumerable<SelectListItem>, "Select account/client name", new { @class = "form-control" })
                @Html.ValidationMessageFor(outlet => outlet.clientName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(outlet => outlet.activated, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.CheckBoxFor(outlet => outlet.activated, new { @checked = "checked", @class = "form-control" })
                @Html.ValidationMessageFor(outlet => outlet.activated, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" name="command" class="btn btn-default" />
                @*<input type="submit" value="Cancel" name="command" class="btn btn-default" />*@
                @*<input type="submit" value="Close" name="command" class="btn btn-default" />*@
            </div>
        </div>

    </div>

}

<div>
    @Html.ActionLink("Back to List", "Outlet")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
